{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos\\\\Practicas\\\\spotifai\\\\app-web\\\\src\\\\pages\\\\Recommender.js\";\nimport RecommendedSongCard from '../utils/RecommendedSongCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Recommender({\n  song,\n  userData,\n  updateRecommendation\n}) {\n  var _song$album$images$;\n  if (!song) {\n    updateRecommendation();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-light\",\n        children: \"Cargando canci\\xF3n recomendada...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  const formattedSong = {\n    name: song.name,\n    artists: song.artists.map(artist => artist.name),\n    // Obtener nombres de artistas\n    album: song.album.name,\n    duration: song.duration_ms,\n    // Duración en milisegundos\n    image: (_song$album$images$ = song.album.images[0]) === null || _song$album$images$ === void 0 ? void 0 : _song$album$images$.url,\n    // URL de la imagen\n    preview: song.external_urls[\"spotify\"] // URL del audio\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(RecommendedSongCard, {\n      song: formattedSong,\n      userId: userData.id,\n      updateRecommendation: updateRecommendation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Recommender;\nvar _c;\n$RefreshReg$(_c, \"Recommender\");","map":{"version":3,"names":["RecommendedSongCard","jsxDEV","_jsxDEV","Recommender","song","userData","updateRecommendation","_song$album$images$","className","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","formattedSong","name","artists","map","artist","album","duration","duration_ms","image","images","url","preview","external_urls","userId","id","_c","$RefreshReg$"],"sources":["D:/Proyectos/Practicas/spotifai/app-web/src/pages/Recommender.js"],"sourcesContent":["import RecommendedSongCard from '../utils/RecommendedSongCard';\r\n\r\nexport default function Recommender({ song, userData, updateRecommendation }) {\r\n\r\n  if (!song) {\r\n    updateRecommendation()\r\n    return (\r\n      <div\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ height: \"100vh\"}}\r\n      >\r\n        <h2 className=\"text-light\">Cargando canción recomendada...</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const formattedSong = {\r\n    name: song.name,\r\n    artists: song.artists.map((artist) => artist.name), // Obtener nombres de artistas\r\n    album: song.album.name,\r\n    duration: song.duration_ms, // Duración en milisegundos\r\n    image: song.album.images[0]?.url, // URL de la imagen\r\n    preview: song.external_urls[\"spotify\"], // URL del audio\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n    >\r\n      <RecommendedSongCard song={formattedSong} userId={userData.id} updateRecommendation={updateRecommendation}/>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,mBAAmB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,eAAe,SAASC,WAAWA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAqB,CAAC,EAAE;EAAA,IAAAC,mBAAA;EAE5E,IAAI,CAACH,IAAI,EAAE;IACTE,oBAAoB,CAAC,CAAC;IACtB,oBACEJ,OAAA;MACEM,SAAS,EAAC,kDAAkD;MAC5DC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,eAE1BT,OAAA;QAAIM,SAAS,EAAC,YAAY;QAAAG,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAEV;EAEA,MAAMC,aAAa,GAAG;IACpBC,IAAI,EAAEb,IAAI,CAACa,IAAI;IACfC,OAAO,EAAEd,IAAI,CAACc,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACH,IAAI,CAAC;IAAE;IACpDI,KAAK,EAAEjB,IAAI,CAACiB,KAAK,CAACJ,IAAI;IACtBK,QAAQ,EAAElB,IAAI,CAACmB,WAAW;IAAE;IAC5BC,KAAK,GAAAjB,mBAAA,GAAEH,IAAI,CAACiB,KAAK,CAACI,MAAM,CAAC,CAAC,CAAC,cAAAlB,mBAAA,uBAApBA,mBAAA,CAAsBmB,GAAG;IAAE;IAClCC,OAAO,EAAEvB,IAAI,CAACwB,aAAa,CAAC,SAAS,CAAC,CAAE;EAC1C,CAAC;EAED,oBACE1B,OAAA;IACEM,SAAS,EAAC,kDAAkD;IAAAG,QAAA,eAE5DT,OAAA,CAACF,mBAAmB;MAACI,IAAI,EAAEY,aAAc;MAACa,MAAM,EAAExB,QAAQ,CAACyB,EAAG;MAACxB,oBAAoB,EAAEA;IAAqB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzG,CAAC;AAEV;AAACgB,EAAA,GA9BuB5B,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}