{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos\\\\Practicas\\\\spotifai\\\\app-web\\\\src\\\\pages\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Admin.css';\nimport trash from \"../assets/trash.svg\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst server_url = process.env.REACT_APP_SERVER_URL;\nexport default function Admin() {\n  _s();\n  const [activeButton, setActiveButton] = useState(null);\n  const [songs, setSongs] = useState([]);\n  const [artists, setArtists] = useState([]);\n  const [pageSongs, setPageSongs] = useState(1);\n  const [pageArtists, setPageArtists] = useState(1);\n  const [totalSongs, setTotalSongs] = useState(0);\n  const [totalArtists, setTotalArtists] = useState(0);\n  const [loading, setLoading] = useState(false); // Para manejar el estado de carga\n  const limit = 20;\n  const pressed = button => {\n    setActiveButton(prev => prev === button ? null : button);\n  };\n\n  // Carga las canciones o artistas desde tu API\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Empieza la carga\n\n      if (activeButton === \"songs\") {\n        try {\n          const songsResponse = await axios.get(`${server_url}/api/get/songs?page=${pageSongs}&limit=${limit}`);\n          const totalSongsResponse = await axios.get(`${server_url}/api/get/songs/count`);\n          setSongs(songsResponse.data);\n          setTotalSongs(totalSongsResponse.data.total);\n        } catch (error) {\n          console.error('Error fetching songs data:', error);\n        }\n      }\n      if (activeButton === \"artists\") {\n        try {\n          const artistsResponse = await axios.get(`${server_url}/api/get/artists?page=${pageArtists}&limit=${limit}`);\n          const totalArtistsResponse = await axios.get(`${server_url}/api/get/artists/count`);\n          setArtists(artistsResponse.data);\n          setTotalArtists(totalArtistsResponse.data.total);\n        } catch (error) {\n          console.error('Error fetching artists data:', error);\n        }\n      }\n      setLoading(false); // Finaliza la carga\n    };\n    if (activeButton) {\n      fetchData();\n    }\n  }, [activeButton, pageSongs, pageArtists]);\n\n  // Enriquecer canciones con datos de Spotify\n  useEffect(() => {\n    const fetchSpotifyData = async () => {\n      const enrichedSongs = await Promise.all(songs.map(async song => {\n        try {\n          const response = await axios.get(`${server_url}/get/songInfo?songName=${encodeURIComponent(song.title)}`, {\n            withCredentials: true\n          });\n          const parsed = JSON.parse(response.data.tracks);\n          const track = parsed.tracks.items[0];\n          return {\n            ...song,\n            spotify: track\n          };\n        } catch (err) {\n          return {\n            ...song,\n            spotify: null\n          };\n        }\n      }));\n      setSongs(enrichedSongs);\n    };\n    if (activeButton === \"songs\" && songs.length > 0) {\n      fetchSpotifyData();\n    }\n  }, [songs.length, activeButton]);\n  const renderPagination = (currentPage, total, onPageChange) => {\n    const totalPages = Math.ceil(total / limit);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === 1,\n        onClick: () => onPageChange(currentPage - 1),\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"P\\xE1gina \", currentPage, \" de \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === totalPages,\n        onClick: () => onPageChange(currentPage + 1),\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"users\"),\n        className: `sidebar-btn ${activeButton === \"users\" ? \"pressed\" : \"\"}`,\n        children: \"Usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"songs\"),\n        className: `sidebar-btn ${activeButton === \"songs\" ? \"pressed\" : \"\"}`,\n        children: \"Canciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"artists\"),\n        className: `sidebar-btn ${activeButton === \"artists\" ? \"pressed\" : \"\"}`,\n        children: \"Artistas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"graphs\"),\n        className: `sidebar-btn ${activeButton === \"graphs\" ? \"pressed\" : \"\"}`,\n        children: \"Gr\\xE1ficos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"admin-header\",\n        children: \"Panel de admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), activeButton === \"users\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Buscar...\",\n          className: \"admin-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/50\",\n            alt: \"Usuario\",\n            className: \"row-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"row-name\",\n            children: \"Nombre del Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"row-info\",\n            children: \"Descripci\\xF3n breve o rol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"row-trash\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: trash,\n              alt: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), activeButton === \"songs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-custom\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this) : songs.map((song, i) => {\n          var _song$spotify$album$i;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-row\",\n            children: [song.spotify && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_song$spotify$album$i = song.spotify.album.images[0]) === null || _song$spotify$album$i === void 0 ? void 0 : _song$spotify$album$i.url,\n                alt: \"Cover\",\n                width: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"row-name\",\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"\\xC1lbum: \", song.spotify.album.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"Duraci\\xF3n: \", Math.round(song.spotify.duration_ms / 1000), \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"row-trash\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: trash,\n                alt: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this);\n        }), renderPagination(pageSongs, totalSongs, setPageSongs)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), activeButton === \"artists\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-custom\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this) : artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"row-name\",\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"row-info\",\n            children: artist.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"row-trash\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: trash,\n              alt: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)), renderPagination(pageArtists, totalArtists, setPageArtists)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), activeButton === \"graphs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-text\",\n          children: \"Mostrando gr\\xE1ficos...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), !activeButton && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-text\",\n          children: \"Selecciona una opci\\xF3n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"jLZo4sOpG3Veowhytthgl4NaNx8=\");\n_c = Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","trash","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","server_url","process","env","REACT_APP_SERVER_URL","Admin","_s","activeButton","setActiveButton","songs","setSongs","artists","setArtists","pageSongs","setPageSongs","pageArtists","setPageArtists","totalSongs","setTotalSongs","totalArtists","setTotalArtists","loading","setLoading","limit","pressed","button","prev","fetchData","songsResponse","get","totalSongsResponse","data","total","error","console","artistsResponse","totalArtistsResponse","fetchSpotifyData","enrichedSongs","Promise","all","map","song","response","encodeURIComponent","title","withCredentials","parsed","JSON","parse","tracks","track","items","spotify","err","length","renderPagination","currentPage","onPageChange","totalPages","Math","ceil","className","children","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","src","alt","role","i","_song$spotify$album$i","album","images","url","width","name","round","duration_ms","artist","id","_c","$RefreshReg$"],"sources":["D:/Proyectos/Practicas/spotifai/app-web/src/pages/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Admin.css';\r\nimport trash from \"../assets/trash.svg\";\r\nimport axios from \"axios\";\r\n\r\nconst server_url = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport default function Admin() {\r\n  const [activeButton, setActiveButton] = useState(null);\r\n  const [songs, setSongs] = useState([]);\r\n  const [artists, setArtists] = useState([]);\r\n  const [pageSongs, setPageSongs] = useState(1);\r\n  const [pageArtists, setPageArtists] = useState(1);\r\n  const [totalSongs, setTotalSongs] = useState(0);\r\n  const [totalArtists, setTotalArtists] = useState(0);\r\n  const [loading, setLoading] = useState(false); // Para manejar el estado de carga\r\n  const limit = 20;\r\n\r\n  const pressed = (button) => {\r\n    setActiveButton(prev => (prev === button ? null : button));\r\n  };\r\n\r\n  // Carga las canciones o artistas desde tu API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true); // Empieza la carga\r\n\r\n      if (activeButton === \"songs\") {\r\n        try {\r\n          const songsResponse = await axios.get(`${server_url}/api/get/songs?page=${pageSongs}&limit=${limit}`);\r\n          const totalSongsResponse = await axios.get(`${server_url}/api/get/songs/count`);\r\n          setSongs(songsResponse.data);\r\n          setTotalSongs(totalSongsResponse.data.total);\r\n        } catch (error) {\r\n          console.error('Error fetching songs data:', error);\r\n        }\r\n      }\r\n\r\n      if (activeButton === \"artists\") {\r\n        try {\r\n          const artistsResponse = await axios.get(`${server_url}/api/get/artists?page=${pageArtists}&limit=${limit}`);\r\n          const totalArtistsResponse = await axios.get(`${server_url}/api/get/artists/count`);\r\n          setArtists(artistsResponse.data);\r\n          setTotalArtists(totalArtistsResponse.data.total);\r\n        } catch (error) {\r\n          console.error('Error fetching artists data:', error);\r\n        }\r\n      }\r\n\r\n      setLoading(false); // Finaliza la carga\r\n    };\r\n\r\n    if (activeButton) {\r\n      fetchData();\r\n    }\r\n  }, [activeButton, pageSongs, pageArtists]);\r\n\r\n  // Enriquecer canciones con datos de Spotify\r\n  useEffect(() => {\r\n    const fetchSpotifyData = async () => {\r\n      const enrichedSongs = await Promise.all(songs.map(async (song) => {\r\n        try {\r\n          const response = await axios.get(`${server_url}/get/songInfo?songName=${encodeURIComponent(song.title)}`, {\r\n            withCredentials: true\r\n          });\r\n          const parsed = JSON.parse(response.data.tracks);\r\n          const track = parsed.tracks.items[0];\r\n          return { ...song, spotify: track };\r\n        } catch (err) {\r\n          return { ...song, spotify: null };\r\n        }\r\n      }));\r\n      setSongs(enrichedSongs);\r\n    };\r\n\r\n    if (activeButton === \"songs\" && songs.length > 0) {\r\n      fetchSpotifyData();\r\n    }\r\n  }, [songs.length, activeButton]);\r\n\r\n  const renderPagination = (currentPage, total, onPageChange) => {\r\n    const totalPages = Math.ceil(total / limit);\r\n    return (\r\n      <div className=\"pagination\">\r\n        <button disabled={currentPage === 1} onClick={() => onPageChange(currentPage - 1)}>Anterior</button>\r\n        <span>Página {currentPage} de {totalPages}</span>\r\n        <button disabled={currentPage === totalPages} onClick={() => onPageChange(currentPage + 1)}>Siguiente</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <aside className=\"sidebar\">\r\n        <button\r\n          onClick={() => pressed(\"users\")}\r\n          className={`sidebar-btn ${activeButton === \"users\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Usuarios\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"songs\")}\r\n          className={`sidebar-btn ${activeButton === \"songs\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Canciones\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"artists\")}\r\n          className={`sidebar-btn ${activeButton === \"artists\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Artistas\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"graphs\")}\r\n          className={`sidebar-btn ${activeButton === \"graphs\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Gráficos\r\n        </button>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <h2 className=\"admin-header\">Panel de admin</h2>\r\n\r\n        {activeButton === \"users\" && (\r\n          <div className=\"admin-table\">\r\n            <input type=\"text\" placeholder=\"Buscar...\" className=\"admin-input\" />\r\n            <div className=\"admin-row\">\r\n              <img src=\"https://via.placeholder.com/50\" alt=\"Usuario\" className=\"row-img\" />\r\n              <h3 className=\"row-name\">Nombre del Usuario</h3>\r\n              <p className=\"row-info\">Descripción breve o rol</p>\r\n              <button className=\"row-trash\">\r\n                <img src={trash} alt=\"Eliminar\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeButton === \"songs\" && (\r\n          <div className=\"admin-table\">\r\n            {loading ? (\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <div className=\"spinner-border spinner-custom\" role=\"status\">\r\n                  <span className=\"sr-only\"></span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              songs.map((song, i) => (\r\n                <div className=\"admin-row\" key={i}>\r\n                  {song.spotify && (\r\n                    <>\r\n                      <img src={song.spotify.album.images[0]?.url} alt=\"Cover\" width=\"50\" />\r\n                      <h3 className=\"row-name\">{song.title}</h3>\r\n                      <p className=\"row-info\">Álbum: {song.spotify.album.name}</p>\r\n                      <p className=\"row-info\">Duración: {Math.round(song.spotify.duration_ms / 1000)}s</p>\r\n                    </>\r\n                  )}\r\n                  <button className=\"row-trash\">\r\n                    <img src={trash} alt=\"Eliminar\" />\r\n                  </button>\r\n                </div>\r\n              ))\r\n            )}\r\n            {renderPagination(pageSongs, totalSongs, setPageSongs)}\r\n          </div>\r\n        )}\r\n\r\n        {activeButton === \"artists\" && (\r\n          <div className=\"admin-table\">\r\n            {loading ? (\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <div className=\"spinner-border spinner-custom\" role=\"status\">\r\n                  <span className=\"sr-only\"></span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              artists.map((artist, i) => (\r\n                <div className=\"admin-row\" key={i}>\r\n                  <h3 className=\"row-name\">{artist.name}</h3>\r\n                  <p className=\"row-info\">{artist.id}</p>\r\n                  <button className=\"row-trash\">\r\n                    <img src={trash} alt=\"Eliminar\" />\r\n                  </button>\r\n                </div>\r\n              ))\r\n            )}\r\n            {renderPagination(pageArtists, totalArtists, setPageArtists)}\r\n          </div>\r\n        )}\r\n\r\n        {activeButton === \"graphs\" && (\r\n          <div className=\"admin-table\">\r\n            <p className='admin-text'>Mostrando gráficos...</p>\r\n          </div>\r\n        )}\r\n\r\n        {!activeButton && (\r\n          <div className=\"admin-table\">\r\n            <p className='admin-text'>Selecciona una opción...</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}