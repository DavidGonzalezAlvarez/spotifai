{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos\\\\Practicas\\\\spotifai\\\\app-web\\\\src\\\\pages\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Admin.css';\nimport trash from \"../assets/trash.svg\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst server_url = process.env.REACT_APP_SERVER_URL;\nexport default function Admin() {\n  _s();\n  const [activeButton, setActiveButton] = useState(null);\n  const [fetchedSongs, setFetchedSongs] = useState(false);\n  const [fetchedArtists, setFetchedArtists] = useState(false);\n  const [songs, setSongs] = useState([]);\n  const [artists, setArtists] = useState([]);\n  const [pageSongs, setPageSongs] = useState(1);\n  const [pageArtists, setPageArtists] = useState(1);\n  const [totalSongs, setTotalSongs] = useState(0);\n  const [totalArtists, setTotalArtists] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const limit = 15;\n  const formatFollowers = followers => {\n    return new Intl.NumberFormat().format(followers);\n  };\n  const pressed = button => {\n    setActiveButton(prev => prev === button ? null : button);\n  };\n  useEffect(() => {\n    const fetchSpotifyData = async () => {\n      setLoading(true); // Inicia el loading mientras enriquecemos las canciones con datos de Spotify\n\n      const enrichedSongs = await Promise.all(songs.map(async song => {\n        if (!song.spotify) {\n          // Verificamos si la canción ya tiene datos de Spotify\n          try {\n            const response = await axios.get(`${server_url}/get/songInfo?songName=${encodeURIComponent(song.title)}`, {\n              withCredentials: true\n            });\n            const parsed = JSON.parse(response.data.tracks);\n            const track = parsed.tracks.items[0];\n            return {\n              ...song,\n              spotify: track\n            };\n          } catch (err) {\n            return {\n              ...song,\n              spotify: null\n            };\n          }\n        }\n        return song; // Si ya tiene datos de Spotify, la retornamos tal cual\n      }));\n      setLoading(false);\n      setSongs(enrichedSongs);\n      setFetchedSongs(false);\n    };\n    if (activeButton === \"songs\" && fetchedSongs) {\n      fetchSpotifyData();\n    }\n  }, [fetchedSongs]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Empieza la carga de canciones\n\n      if (activeButton === \"songs\") {\n        try {\n          const songsResponse = await axios.get(`${server_url}/api/get/songs?page=${pageSongs}&limit=${limit}`);\n          const totalSongsResponse = await axios.get(`${server_url}/api/get/songs/count`);\n          setSongs(songsResponse.data);\n          setTotalSongs(totalSongsResponse.data.total);\n        } catch (error) {\n          console.error('Error fetching songs data:', error);\n        }\n      }\n      setFetchedSongs(true);\n      setLoading(false); // Finaliza la carga de canciones\n    };\n    if (activeButton === \"songs\") {\n      fetchData();\n    }\n  }, [activeButton, pageSongs]);\n  useEffect(() => {\n    const fetchSpotifyData = async () => {\n      setLoading(true); // Inicia el loading mientras enriquecemos los artistas con datos de Spotify\n\n      const enrichedArtists = await Promise.all(artists.map(async artist => {\n        if (!artist.spotify) {\n          // Verificamos si el artista ya tiene datos de Spotify\n          try {\n            const response = await axios.get(`${server_url}/get/artistInfo?artistName=${encodeURIComponent(artist.name)}`, {\n              withCredentials: true\n            });\n            const artistData = response.data;\n            console.log(artistData);\n            return {\n              ...artist,\n              spotify: artistData\n            };\n          } catch (err) {\n            return {\n              ...artist,\n              spotify: null\n            }; // Si hay un error, retornamos el artista sin datos de Spotify\n          }\n        }\n        return artist; // Si ya tiene datos de Spotify, lo retornamos tal cual\n      }));\n      setLoading(false);\n      setArtists(enrichedArtists); // Actualizamos el estado con los artistas enriquecidos\n      setFetchedArtists(false);\n    };\n    if (activeButton === \"artists\" && fetchedArtists) {\n      fetchSpotifyData();\n    }\n  }, [fetchedArtists]); // El efecto se ejecutará cuando 'fetchedArtists' cambie\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Empieza la carga de canciones\n\n      if (activeButton === \"artists\") {\n        try {\n          const artistsResponse = await axios.get(`${server_url}/api/get/artists?page=${pageArtists}&limit=${limit}`);\n          const totalArtistsResponse = await axios.get(`${server_url}/api/get/artists/count`);\n          setArtists(artistsResponse.data);\n          setTotalArtists(totalArtistsResponse.data.total);\n        } catch (error) {\n          console.error('Error fetching artists data:', error);\n        }\n      }\n      setFetchedArtists(true);\n      setLoading(false); // Finaliza la carga de canciones\n    };\n    if (activeButton === \"artists\") {\n      fetchData();\n    }\n  }, [activeButton, pageArtists]);\n  const renderPagination = (currentPage, total, onPageChange) => {\n    const totalPages = Math.ceil(total / limit);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === 1,\n        onClick: () => onPageChange(currentPage - 1),\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"P\\xE1gina \", currentPage, \" de \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === totalPages,\n        onClick: () => onPageChange(currentPage + 1),\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"users\"),\n        className: `sidebar-btn ${activeButton === \"users\" ? \"pressed\" : \"\"}`,\n        children: \"Usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"songs\"),\n        className: `sidebar-btn ${activeButton === \"songs\" ? \"pressed\" : \"\"}`,\n        children: \"Canciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"artists\"),\n        className: `sidebar-btn ${activeButton === \"artists\" ? \"pressed\" : \"\"}`,\n        children: \"Artistas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"graphs\"),\n        className: `sidebar-btn ${activeButton === \"graphs\" ? \"pressed\" : \"\"}`,\n        children: \"Gr\\xE1ficos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"admin-header\",\n        children: \"Panel de admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), activeButton === \"users\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Buscar...\",\n          className: \"admin-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/50\",\n            alt: \"Usuario\",\n            className: \"row-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"row-name\",\n            children: \"Nombre del Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"row-info\",\n            children: \"Descripci\\xF3n breve o rol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"row-trash\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: trash,\n              alt: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), activeButton === \"songs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-custom\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this) : songs.map((song, i) => {\n          var _song$spotify$album$i;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-row\",\n            children: [song.spotify && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_song$spotify$album$i = song.spotify.album.images[0]) === null || _song$spotify$album$i === void 0 ? void 0 : _song$spotify$album$i.url,\n                alt: \"Cover\",\n                width: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"row-name\",\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"\\xC1lbum: \", song.spotify.album.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"Duraci\\xF3n: \", Math.round(song.spotify.duration_ms / 1000), \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"row-trash\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: trash,\n                alt: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this);\n        }), renderPagination(pageSongs, totalSongs, setPageSongs)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), activeButton === \"artists\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-custom\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this) : artists.map((artist, i) => {\n          var _artist$spotify$image;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-row\",\n            children: [artist.spotify ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: ((_artist$spotify$image = artist.spotify.images[0]) === null || _artist$spotify$image === void 0 ? void 0 : _artist$spotify$image.url) || 'https://via.placeholder.com/50',\n                alt: artist.name,\n                width: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"row-name\",\n                children: artist.spotify.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"G\\xE9neros: \", artist.spotify.genres.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"Seguidores: \", formatFollowers(artist.spotify.followers)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"row-info\",\n              children: \"Cargando datos...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"row-trash\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: trash,\n                alt: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }, this);\n        }), renderPagination(pageArtists, totalArtists, setPageArtists)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this), activeButton === \"graphs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-text\",\n          children: \"Mostrando gr\\xE1ficos...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), !activeButton && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-text\",\n          children: \"Selecciona una opci\\xF3n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"P2jNVVYgkPjQTBweJd83ndNEkGI=\");\n_c = Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","trash","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","server_url","process","env","REACT_APP_SERVER_URL","Admin","_s","activeButton","setActiveButton","fetchedSongs","setFetchedSongs","fetchedArtists","setFetchedArtists","songs","setSongs","artists","setArtists","pageSongs","setPageSongs","pageArtists","setPageArtists","totalSongs","setTotalSongs","totalArtists","setTotalArtists","loading","setLoading","limit","formatFollowers","followers","Intl","NumberFormat","format","pressed","button","prev","fetchSpotifyData","enrichedSongs","Promise","all","map","song","spotify","response","get","encodeURIComponent","title","withCredentials","parsed","JSON","parse","data","tracks","track","items","err","fetchData","songsResponse","totalSongsResponse","total","error","console","enrichedArtists","artist","name","artistData","log","artistsResponse","totalArtistsResponse","renderPagination","currentPage","onPageChange","totalPages","Math","ceil","className","children","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","src","alt","role","i","_song$spotify$album$i","album","images","url","width","round","duration_ms","_artist$spotify$image","genres","join","_c","$RefreshReg$"],"sources":["D:/Proyectos/Practicas/spotifai/app-web/src/pages/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Admin.css';\r\nimport trash from \"../assets/trash.svg\";\r\nimport axios from \"axios\";\r\n\r\nconst server_url = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport default function Admin() {\r\n  const [activeButton, setActiveButton] = useState(null);\r\n  const [fetchedSongs, setFetchedSongs] = useState(false);\r\n  const [fetchedArtists, setFetchedArtists] = useState(false);\r\n  const [songs, setSongs] = useState([]);\r\n  const [artists, setArtists] = useState([]);\r\n  const [pageSongs, setPageSongs] = useState(1);\r\n  const [pageArtists, setPageArtists] = useState(1);\r\n  const [totalSongs, setTotalSongs] = useState(0);\r\n  const [totalArtists, setTotalArtists] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const limit = 15;\r\n\r\n    const formatFollowers = (followers) => {\r\n        return new Intl.NumberFormat().format(followers);\r\n    };\r\n\r\n  const pressed = (button) => {\r\n    setActiveButton(prev => (prev === button ? null : button));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSpotifyData = async () => {\r\n      setLoading(true); // Inicia el loading mientras enriquecemos las canciones con datos de Spotify\r\n\r\n      const enrichedSongs = await Promise.all(songs.map(async (song) => {\r\n        if (!song.spotify) { // Verificamos si la canción ya tiene datos de Spotify\r\n          try {\r\n            const response = await axios.get(`${server_url}/get/songInfo?songName=${encodeURIComponent(song.title)}`, {\r\n              withCredentials: true\r\n            });\r\n            const parsed = JSON.parse(response.data.tracks);\r\n            const track = parsed.tracks.items[0];\r\n            return { ...song, spotify: track };\r\n          } catch (err) {\r\n            return { ...song, spotify: null };\r\n          }\r\n        }\r\n        return song; // Si ya tiene datos de Spotify, la retornamos tal cual\r\n      }));\r\n        setLoading(false); \r\n        setSongs(enrichedSongs);\r\n        setFetchedSongs(false)\r\n    };\r\n\r\n    if (activeButton === \"songs\" && fetchedSongs) {\r\n        fetchSpotifyData();\r\n    }\r\n  }, [fetchedSongs]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true); // Empieza la carga de canciones\r\n\r\n      if (activeButton === \"songs\") {\r\n        try {\r\n          const songsResponse = await axios.get(`${server_url}/api/get/songs?page=${pageSongs}&limit=${limit}`);\r\n          const totalSongsResponse = await axios.get(`${server_url}/api/get/songs/count`);\r\n          setSongs(songsResponse.data);\r\n          setTotalSongs(totalSongsResponse.data.total);\r\n        } catch (error) {\r\n          console.error('Error fetching songs data:', error);\r\n        }\r\n      }\r\n        setFetchedSongs(true);\r\n        setLoading(false); // Finaliza la carga de canciones\r\n    };\r\n\r\n    if (activeButton === \"songs\") {\r\n      fetchData();\r\n    }\r\n  }, [activeButton, pageSongs]);\r\n\r\n  useEffect(() => {\r\n    const fetchSpotifyData = async () => {\r\n        setLoading(true); // Inicia el loading mientras enriquecemos los artistas con datos de Spotify\r\n\r\n        const enrichedArtists = await Promise.all(artists.map(async (artist) => {\r\n        if (!artist.spotify) { // Verificamos si el artista ya tiene datos de Spotify\r\n            try {\r\n            const response = await axios.get(`${server_url}/get/artistInfo?artistName=${encodeURIComponent(artist.name)}`, {\r\n                withCredentials: true\r\n            });\r\n            const artistData = response.data;\r\n            console.log(artistData)\r\n            return { ...artist, spotify: artistData };\r\n            } catch (err) {\r\n            return { ...artist, spotify: null }; // Si hay un error, retornamos el artista sin datos de Spotify\r\n            }\r\n        }\r\n        return artist; // Si ya tiene datos de Spotify, lo retornamos tal cual\r\n        }));\r\n\r\n        setLoading(false);\r\n        setArtists(enrichedArtists); // Actualizamos el estado con los artistas enriquecidos\r\n        setFetchedArtists(false);\r\n    };\r\n\r\n    if (activeButton === \"artists\" && fetchedArtists) {\r\n        fetchSpotifyData();\r\n    }\r\n    }, [fetchedArtists]); // El efecto se ejecutará cuando 'fetchedArtists' cambie\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true); // Empieza la carga de canciones\r\n\r\n      if (activeButton === \"artists\") {\r\n        try {\r\n          const artistsResponse = await axios.get(`${server_url}/api/get/artists?page=${pageArtists}&limit=${limit}`);\r\n          const totalArtistsResponse = await axios.get(`${server_url}/api/get/artists/count`);\r\n          setArtists(artistsResponse.data);\r\n          setTotalArtists(totalArtistsResponse.data.total);\r\n        } catch (error) {\r\n          console.error('Error fetching artists data:', error);\r\n        }\r\n      }\r\n\r\n        setFetchedArtists(true);\r\n        setLoading(false); // Finaliza la carga de canciones\r\n    };\r\n\r\n    if (activeButton === \"artists\") {\r\n      fetchData();\r\n    }\r\n  }, [activeButton, pageArtists]);\r\n\r\n  const renderPagination = (currentPage, total, onPageChange) => {\r\n    const totalPages = Math.ceil(total / limit);\r\n    return (\r\n      <div className=\"pagination\">\r\n        <button disabled={currentPage === 1} onClick={() => onPageChange(currentPage - 1)}>Anterior</button>\r\n        <span>Página {currentPage} de {totalPages}</span>\r\n        <button disabled={currentPage === totalPages} onClick={() => onPageChange(currentPage + 1)}>Siguiente</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <aside className=\"sidebar\">\r\n        <button\r\n          onClick={() => pressed(\"users\")}\r\n          className={`sidebar-btn ${activeButton === \"users\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Usuarios\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"songs\")}\r\n          className={`sidebar-btn ${activeButton === \"songs\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Canciones\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"artists\")}\r\n          className={`sidebar-btn ${activeButton === \"artists\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Artistas\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"graphs\")}\r\n          className={`sidebar-btn ${activeButton === \"graphs\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Gráficos\r\n        </button>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <h2 className=\"admin-header\">Panel de admin</h2>\r\n\r\n        {activeButton === \"users\" && (\r\n          <div className=\"admin-table\">\r\n            <input type=\"text\" placeholder=\"Buscar...\" className=\"admin-input\" />\r\n            <div className=\"admin-row\">\r\n              <img src=\"https://via.placeholder.com/50\" alt=\"Usuario\" className=\"row-img\" />\r\n              <h3 className=\"row-name\">Nombre del Usuario</h3>\r\n              <p className=\"row-info\">Descripción breve o rol</p>\r\n              <button className=\"row-trash\">\r\n                <img src={trash} alt=\"Eliminar\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeButton === \"songs\" && (\r\n          <div className=\"admin-table\">\r\n            {loading ? (\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <div className=\"spinner-border spinner-custom\" role=\"status\">\r\n                  <span className=\"sr-only\"></span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              songs.map((song, i) => (\r\n                <div className=\"admin-row\" key={i}>\r\n                  {song.spotify && (\r\n                    <>\r\n                      <img src={song.spotify.album.images[0]?.url} alt=\"Cover\" width=\"50\" />\r\n                      <h3 className=\"row-name\">{song.title}</h3>\r\n                      <p className=\"row-info\">Álbum: {song.spotify.album.name}</p>\r\n                      <p className=\"row-info\">Duración: {Math.round(song.spotify.duration_ms / 1000)}s</p>\r\n                    </>\r\n                  )}\r\n                  <button className=\"row-trash\">\r\n                    <img src={trash} alt=\"Eliminar\" />\r\n                  </button>\r\n                </div>\r\n              ))\r\n            )}\r\n            {renderPagination(pageSongs, totalSongs, setPageSongs)}\r\n          </div>\r\n        )}\r\n\r\n        {activeButton === \"artists\" && (\r\n            <div className=\"admin-table\">\r\n                {loading ? (\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <div className=\"spinner-border spinner-custom\" role=\"status\">\r\n                    <span className=\"sr-only\"></span>\r\n                    </div>\r\n                </div>\r\n                ) : (\r\n                artists.map((artist, i) => (\r\n                    <div className=\"admin-row\" key={i}>\r\n                    {/* Verifica si el artista tiene datos de Spotify */}\r\n                    {artist.spotify ? (\r\n                        <>\r\n                        {/* Imágenes del artista */}\r\n                        <img \r\n                            src={artist.spotify.images[0]?.url || 'https://via.placeholder.com/50'} \r\n                            alt={artist.name} \r\n                            width=\"50\"\r\n                        />\r\n                        {/* Nombre del artista */}\r\n                        <h3 className=\"row-name\">{artist.spotify.name}</h3>\r\n                        {/* Información adicional */}\r\n                        <p className=\"row-info\">Géneros: {artist.spotify.genres.join(', ')}</p>\r\n                        <p className=\"row-info\">Seguidores: {formatFollowers(artist.spotify.followers)}</p>\r\n                        </>\r\n                    ) : (\r\n                        <p className=\"row-info\">Cargando datos...</p>\r\n                    )}\r\n                    {/* Botón para eliminar */}\r\n                    <button className=\"row-trash\">\r\n                        <img src={trash} alt=\"Eliminar\" />\r\n                    </button>\r\n                    </div>\r\n                ))\r\n                )}\r\n                {renderPagination(pageArtists, totalArtists, setPageArtists)}\r\n            </div>\r\n            )}\r\n\r\n        {activeButton === \"graphs\" && (\r\n          <div className=\"admin-table\">\r\n            <p className='admin-text'>Mostrando gráficos...</p>\r\n          </div>\r\n        )}\r\n\r\n        {!activeButton && (\r\n          <div className=\"admin-table\">\r\n            <p className='admin-text'>Selecciona una opción...</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}