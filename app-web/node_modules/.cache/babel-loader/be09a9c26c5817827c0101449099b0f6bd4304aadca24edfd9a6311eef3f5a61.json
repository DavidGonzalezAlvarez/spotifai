{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos\\\\Practicas\\\\spotifai\\\\app-web\\\\src\\\\pages\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Admin.css';\nimport trash from \"../assets/trash.svg\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst server_url = process.env.REACT_APP_SERVER_URL;\nexport default function Admin() {\n  _s();\n  const [activeButton, setActiveButton] = useState(null);\n  const [songs, setSongs] = useState([]);\n  const [artists, setArtists] = useState([]);\n  const [pageSongs, setPageSongs] = useState(1);\n  const [pageArtists, setPageArtists] = useState(1);\n  const [totalSongs, setTotalSongs] = useState(0);\n  const [totalArtists, setTotalArtists] = useState(0);\n  const [loading, setLoading] = useState(false); // Nuevo estado para el cargando\n  const limit = 20;\n  const pressed = button => {\n    setActiveButton(prev => prev === button ? null : button);\n  };\n\n  // Carga las canciones o artistas desde tu API\n  useEffect(() => {\n    if (activeButton === \"songs\") {\n      setLoading(true); // Activar el estado de carga al hacer la petición\n      axios.get(server_url + `/api/get/songs?page=${pageSongs}&limit=${limit}`).then(res => {\n        setSongs(res.data);\n        setLoading(false); // Desactivar el estado de carga cuando la respuesta llegue\n      }).catch(() => setLoading(false)); // En caso de error, también desactivar carga\n      axios.get(server_url + \"/api/get/songs/count\").then(res => setTotalSongs(res.data.total));\n    }\n    if (activeButton === \"artists\") {\n      setLoading(true); // Activar el estado de carga al hacer la petición\n      axios.get(server_url + `/api/get/artists?page=${pageArtists}&limit=${limit}`).then(res => {\n        setArtists(res.data);\n        setLoading(false); // Desactivar el estado de carga cuando la respuesta llegue\n      }).catch(() => setLoading(false)); // En caso de error, también desactivar carga\n      axios.get(server_url + \"/api/get/artists/count\").then(res => setTotalArtists(res.data.total));\n    }\n  }, [activeButton, pageSongs, pageArtists]);\n\n  // Enriquecer canciones con datos de Spotify\n  useEffect(() => {\n    const fetchSpotifyData = async () => {\n      const enrichedSongs = await Promise.all(songs.map(async song => {\n        try {\n          const response = await axios.get(`${server_url}/api/get/songInfo?songName=${encodeURIComponent(song.title)}`, {\n            withCredentials: true\n          });\n          const parsed = JSON.parse(response.data.tracks);\n          const track = parsed.tracks.items[0];\n          return {\n            ...song,\n            spotify: track\n          };\n        } catch (err) {\n          return {\n            ...song,\n            spotify: null\n          };\n        }\n      }));\n      setSongs(enrichedSongs);\n    };\n    if (activeButton === \"songs\" && songs.length > 0) {\n      fetchSpotifyData();\n    }\n  }, [songs.length, activeButton]);\n  const renderPagination = (currentPage, total, onPageChange) => {\n    const totalPages = Math.ceil(total / limit);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === 1,\n        onClick: () => onPageChange(currentPage - 1),\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"P\\xE1gina \", currentPage, \" de \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage === totalPages,\n        onClick: () => onPageChange(currentPage + 1),\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"users\"),\n        className: `sidebar-btn ${activeButton === \"users\" ? \"pressed\" : \"\"}`,\n        children: \"Usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"songs\"),\n        className: `sidebar-btn ${activeButton === \"songs\" ? \"pressed\" : \"\"}`,\n        children: \"Canciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"artists\"),\n        className: `sidebar-btn ${activeButton === \"artists\" ? \"pressed\" : \"\"}`,\n        children: \"Artistas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"graphs\"),\n        className: `sidebar-btn ${activeButton === \"graphs\" ? \"pressed\" : \"\"}`,\n        children: \"Gr\\xE1ficos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"admin-header\",\n        children: \"Panel de admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content d-flex justify-content-center align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border spinner-custom\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [activeButton === \"users\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Buscar...\",\n            className: \"admin-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://via.placeholder.com/50\",\n              alt: \"Usuario\",\n              className: \"row-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"row-name\",\n              children: \"Nombre del Usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"row-info\",\n              children: \"Descripci\\xF3n breve o rol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"row-trash\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: trash,\n                alt: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), activeButton === \"songs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-table\",\n          children: [songs.map((song, i) => {\n            var _song$spotify$album$i;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"admin-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"row-name\",\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"ID local: \", song.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), song.spotify && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"row-info\",\n                  children: [\"\\xC1lbum: \", song.spotify.album.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"row-info\",\n                  children: [\"Duraci\\xF3n: \", Math.round(song.spotify.duration_ms / 1000), \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_song$spotify$album$i = song.spotify.album.images[0]) === null || _song$spotify$album$i === void 0 ? void 0 : _song$spotify$album$i.url,\n                  alt: \"Cover\",\n                  width: \"50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 25\n                }, this), song.spotify.preview_url && /*#__PURE__*/_jsxDEV(\"audio\", {\n                  controls: true,\n                  src: song.spotify.preview_url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"row-trash\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: trash,\n                  alt: \"Eliminar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this);\n          }), renderPagination(pageSongs, totalSongs, setPageSongs)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), activeButton === \"artists\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-table\",\n          children: [artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"row-name\",\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"row-info\",\n              children: artist.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"row-trash\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: trash,\n                alt: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this)), renderPagination(pageArtists, totalArtists, setPageArtists)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), activeButton === \"graphs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-table\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"admin-text\",\n            children: \"Mostrando gr\\xE1ficos...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), !activeButton && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-table\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"admin-text\",\n            children: \"Selecciona una opci\\xF3n...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"jLZo4sOpG3Veowhytthgl4NaNx8=\");\n_c = Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","trash","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","server_url","process","env","REACT_APP_SERVER_URL","Admin","_s","activeButton","setActiveButton","songs","setSongs","artists","setArtists","pageSongs","setPageSongs","pageArtists","setPageArtists","totalSongs","setTotalSongs","totalArtists","setTotalArtists","loading","setLoading","limit","pressed","button","prev","get","then","res","data","catch","total","fetchSpotifyData","enrichedSongs","Promise","all","map","song","response","encodeURIComponent","title","withCredentials","parsed","JSON","parse","tracks","track","items","spotify","err","length","renderPagination","currentPage","onPageChange","totalPages","Math","ceil","className","children","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","role","type","placeholder","src","alt","i","_song$spotify$album$i","id","album","name","round","duration_ms","images","url","width","preview_url","controls","artist","_c","$RefreshReg$"],"sources":["D:/Proyectos/Practicas/spotifai/app-web/src/pages/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Admin.css';\r\nimport trash from \"../assets/trash.svg\";\r\nimport axios from \"axios\";\r\n\r\nconst server_url = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport default function Admin() {\r\n  const [activeButton, setActiveButton] = useState(null);\r\n  const [songs, setSongs] = useState([]);\r\n  const [artists, setArtists] = useState([]);\r\n  const [pageSongs, setPageSongs] = useState(1);\r\n  const [pageArtists, setPageArtists] = useState(1);\r\n  const [totalSongs, setTotalSongs] = useState(0);\r\n  const [totalArtists, setTotalArtists] = useState(0);\r\n  const [loading, setLoading] = useState(false);  // Nuevo estado para el cargando\r\n  const limit = 20;\r\n\r\n  const pressed = (button) => {\r\n    setActiveButton(prev => (prev === button ? null : button));\r\n  };\r\n\r\n  // Carga las canciones o artistas desde tu API\r\n  useEffect(() => {\r\n    if (activeButton === \"songs\") {\r\n      setLoading(true);  // Activar el estado de carga al hacer la petición\r\n      axios.get(server_url + `/api/get/songs?page=${pageSongs}&limit=${limit}`)\r\n        .then(res => {\r\n          setSongs(res.data);\r\n          setLoading(false);  // Desactivar el estado de carga cuando la respuesta llegue\r\n        })\r\n        .catch(() => setLoading(false));  // En caso de error, también desactivar carga\r\n      axios.get(server_url + \"/api/get/songs/count\")\r\n        .then(res => setTotalSongs(res.data.total));\r\n    }\r\n    if (activeButton === \"artists\") {\r\n      setLoading(true);  // Activar el estado de carga al hacer la petición\r\n      axios.get(server_url + `/api/get/artists?page=${pageArtists}&limit=${limit}`)\r\n        .then(res => {\r\n          setArtists(res.data);\r\n          setLoading(false);  // Desactivar el estado de carga cuando la respuesta llegue\r\n        })\r\n        .catch(() => setLoading(false));  // En caso de error, también desactivar carga\r\n      axios.get(server_url + \"/api/get/artists/count\")\r\n        .then(res => setTotalArtists(res.data.total));\r\n    }\r\n  }, [activeButton, pageSongs, pageArtists]);\r\n\r\n  // Enriquecer canciones con datos de Spotify\r\n  useEffect(() => {\r\n    const fetchSpotifyData = async () => {\r\n      const enrichedSongs = await Promise.all(songs.map(async (song) => {\r\n        try {\r\n          const response = await axios.get(`${server_url}/api/get/songInfo?songName=${encodeURIComponent(song.title)}`, {\r\n            withCredentials: true\r\n          });\r\n          const parsed = JSON.parse(response.data.tracks);\r\n          const track = parsed.tracks.items[0];\r\n          return { ...song, spotify: track };\r\n        } catch (err) {\r\n          return { ...song, spotify: null };\r\n        }\r\n      }));\r\n      setSongs(enrichedSongs);\r\n    };\r\n\r\n    if (activeButton === \"songs\" && songs.length > 0) {\r\n      fetchSpotifyData();\r\n    }\r\n  }, [songs.length, activeButton]);\r\n\r\n  const renderPagination = (currentPage, total, onPageChange) => {\r\n    const totalPages = Math.ceil(total / limit);\r\n    return (\r\n      <div className=\"pagination\">\r\n        <button disabled={currentPage === 1} onClick={() => onPageChange(currentPage - 1)}>Anterior</button>\r\n        <span>Página {currentPage} de {totalPages}</span>\r\n        <button disabled={currentPage === totalPages} onClick={() => onPageChange(currentPage + 1)}>Siguiente</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <aside className=\"sidebar\">\r\n        <button\r\n          onClick={() => pressed(\"users\")}\r\n          className={`sidebar-btn ${activeButton === \"users\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Usuarios\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"songs\")}\r\n          className={`sidebar-btn ${activeButton === \"songs\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Canciones\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"artists\")}\r\n          className={`sidebar-btn ${activeButton === \"artists\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Artistas\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"graphs\")}\r\n          className={`sidebar-btn ${activeButton === \"graphs\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Gráficos\r\n        </button>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <h2 className=\"admin-header\">Panel de admin</h2>\r\n\r\n        {loading ? (\r\n          <div className=\"main-content d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border spinner-custom\" role=\"status\">\r\n              <span className=\"sr-only\"></span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {activeButton === \"users\" && (\r\n              <div className=\"admin-table\">\r\n                <input type=\"text\" placeholder=\"Buscar...\" className=\"admin-input\" />\r\n                <div className=\"admin-row\">\r\n                  <img src=\"https://via.placeholder.com/50\" alt=\"Usuario\" className=\"row-img\" />\r\n                  <h3 className=\"row-name\">Nombre del Usuario</h3>\r\n                  <p className=\"row-info\">Descripción breve o rol</p>\r\n                  <button className=\"row-trash\">\r\n                    <img src={trash} alt=\"Eliminar\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeButton === \"songs\" && (\r\n              <div className=\"admin-table\">\r\n                {songs.map((song, i) => (\r\n                  <div className=\"admin-row\" key={i}>\r\n                    <h3 className=\"row-name\">{song.title}</h3>\r\n                    <p className=\"row-info\">ID local: {song.id}</p>\r\n                    {song.spotify && (\r\n                      <>\r\n                        <p className=\"row-info\">Álbum: {song.spotify.album.name}</p>\r\n                        <p className=\"row-info\">Duración: {Math.round(song.spotify.duration_ms / 1000)}s</p>\r\n                        <img src={song.spotify.album.images[0]?.url} alt=\"Cover\" width=\"50\" />\r\n                        {song.spotify.preview_url && (\r\n                          <audio controls src={song.spotify.preview_url}></audio>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    <button className=\"row-trash\">\r\n                      <img src={trash} alt=\"Eliminar\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n                {renderPagination(pageSongs, totalSongs, setPageSongs)}\r\n              </div>\r\n            )}\r\n\r\n            {activeButton === \"artists\" && (\r\n              <div className=\"admin-table\">\r\n                {artists.map((artist, i) => (\r\n                  <div className=\"admin-row\" key={i}>\r\n                    <h3 className=\"row-name\">{artist.name}</h3>\r\n                    <p className=\"row-info\">{artist.id}</p>\r\n                    <button className=\"row-trash\">\r\n                      <img src={trash} alt=\"Eliminar\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n                {renderPagination(pageArtists, totalArtists, setPageArtists)}\r\n              </div>\r\n            )}\r\n\r\n            {activeButton === \"graphs\" && (\r\n              <div className=\"admin-table\">\r\n                <p className='admin-text'>Mostrando gráficos...</p>\r\n              </div>\r\n            )}\r\n\r\n            {!activeButton && (\r\n              <div className=\"admin-table\">\r\n                <p className='admin-text'>Selecciona una opción...</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}