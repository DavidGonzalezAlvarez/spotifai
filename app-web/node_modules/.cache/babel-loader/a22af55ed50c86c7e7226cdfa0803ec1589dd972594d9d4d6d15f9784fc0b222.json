{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos\\\\Practicas\\\\spotifai\\\\app-web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/App.css';\nimport spotify from './assets/spotify.png';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport Songs from './pages/Songs';\nimport Artists from './pages/Artists';\nimport Recommender from './pages/Recommender';\nimport Admin from './pages/Admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server_url = process.env.REACT_APP_SERVER_URL;\nexport default function App() {\n  _s();\n  const [yearSongs, setYearSongs] = useState(null);\n  const [monthSongs, setMonthSongs] = useState(null);\n  const [weekSongs, setWeekSongs] = useState(null);\n  const [yearArtistsSongs, setYearArtistsSongs] = useState(null);\n  const [monthArtistsSongs, setMonthArtistsSongs] = useState(null);\n  const [weekArtistsSongs, setWeekArtistsSongs] = useState(null);\n  const [yearArtists, setYearArtists] = useState(null);\n  const [monthArtists, setMonthArtists] = useState(null);\n  const [weekArtists, setWeekArtists] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [recommendedSong, setRecommendedSong] = useState(false);\n  const [songTitle, setSongTitle] = useState(false);\n  const login = () => {\n    axios.get(server_url + '/login').then(response => {\n      const spotifyURL = response.data;\n      window.location.href = spotifyURL;\n    });\n  };\n  useEffect(() => {\n    axios.get(server_url + '/auth/verify', {\n      withCredentials: true\n    }).then(response => {\n      setIsAuthenticated(response.data.authenticated);\n    }).catch(error => {\n      console.error(\"Error de autenticación:\", error);\n      setUserData(null);\n      setIsAuthenticated(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (isAuthenticated) {\n      axios.get(server_url + '/get/user', {\n        withCredentials: true\n      }).then(response => {\n        setUserData(response.data.userData);\n        getUserData();\n      }).catch(error => {\n        console.log(\"Error al recibir la información del usuario:\", error);\n      });\n    } else {\n      setUserData(null);\n    }\n  }, [isAuthenticated]);\n  const logout = () => {\n    axios.get(server_url + '/logout', {\n      withCredentials: true\n    }).then(() => {\n      setIsAuthenticated(false);\n      setUserData(null);\n    });\n    window.location.href = 'http://localhost:3000/';\n  };\n  const getUserData = () => {\n    setLoading(true);\n    const cancelToken = axios.CancelToken.source();\n    const requests = [axios.get(server_url + '/get/topTracks', {\n      params: {\n        timeRange: \"long_term\",\n        limit: \"50\"\n      },\n      withCredentials: true,\n      cancelToken: cancelToken.token\n    }).then(response => {\n      setYearSongs(JSON.parse(response.data.topTracks));\n    }), axios.get(server_url + '/get/topTracks', {\n      params: {\n        timeRange: \"medium_term\",\n        limit: \"50\"\n      },\n      withCredentials: true,\n      cancelToken: cancelToken.token\n    }).then(response => {\n      setMonthSongs(JSON.parse(response.data.topTracks));\n    }), axios.get(server_url + '/get/topTracks', {\n      params: {\n        timeRange: \"short_term\",\n        limit: \"50\"\n      },\n      withCredentials: true,\n      cancelToken: cancelToken.token\n    }).then(response => {\n      setWeekSongs(JSON.parse(response.data.topTracks));\n    }), axios.get(server_url + '/get/topArtists', {\n      params: {\n        timeRange: \"long_term\",\n        limit: \"10\"\n      },\n      withCredentials: true,\n      cancelToken: cancelToken.token\n    }).then(response => {\n      setYearArtists(JSON.parse(response.data.topArtists));\n      getYearTopSongs(JSON.parse(response.data.topArtists));\n    }), axios.get(server_url + '/get/topArtists', {\n      params: {\n        timeRange: \"medium_term\",\n        limit: \"10\"\n      },\n      withCredentials: true,\n      cancelToken: cancelToken.token\n    }).then(response => {\n      setMonthArtists(JSON.parse(response.data.topArtists));\n      getMonthTopSongs(JSON.parse(response.data.topArtists));\n    }), axios.get(server_url + '/get/topArtists', {\n      params: {\n        timeRange: \"short_term\",\n        limit: \"10\"\n      },\n      withCredentials: true,\n      cancelToken: cancelToken.token\n    }).then(response => {\n      setWeekArtists(JSON.parse(response.data.topArtists));\n      getWeekTopSongs(JSON.parse(response.data.topArtists));\n    })];\n    Promise.all(requests).then(() => {\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n      if (axios.isCancel(error)) {\n        console.log(\"Solicitud cancelada\");\n      } else {\n        console.error(\"Error al obtener los datos:\", error);\n      }\n    });\n  };\n  const getYearTopSongs = async yearArtistsData => {\n    let artistsSongs = [];\n    try {\n      // Crea un array de promesas para todas las peticiones\n      const promises = yearArtistsData.items.map(artist => {\n        return axios.get(server_url + '/get/artists/topTracks', {\n          params: {\n            id: artist.id,\n            name: artist.name\n          },\n          withCredentials: true\n        });\n      });\n\n      // Espera a que todas las promesas se resuelvan\n      const responses = await Promise.all(promises);\n\n      // Combina los resultados en artistsSongs\n      responses.forEach(response => {\n        artistsSongs = artistsSongs.concat(JSON.parse(response.data.topTracks));\n      });\n      setYearArtistsSongs(artistsSongs);\n      return artistsSongs; // Devuelve los datos si necesitas usarlos en otro lugar\n    } catch (error) {\n      console.error(\"Error al obtener las canciones principales:\", error);\n      return []; // Devuelve un array vacío en caso de error\n    }\n  };\n  const getMonthTopSongs = async monthArtistsData => {\n    let artistsSongs = [];\n    try {\n      // Crea un array de promesas para todas las peticiones\n      const promises = monthArtistsData.items.map(artist => {\n        return axios.get(server_url + '/get/artists/topTracks', {\n          params: {\n            id: artist.id,\n            name: artist.name\n          },\n          withCredentials: true\n        });\n      });\n\n      // Espera a que todas las promesas se resuelvan\n      const responses = await Promise.all(promises);\n\n      // Combina los resultados en artistsSongs\n      responses.forEach(response => {\n        artistsSongs = artistsSongs.concat(JSON.parse(response.data.topTracks));\n      });\n      setMonthArtistsSongs(artistsSongs);\n      return artistsSongs; // Devuelve los datos si necesitas usarlos en otro lugar\n    } catch (error) {\n      console.error(\"Error al obtener las canciones principales:\", error);\n      return []; // Devuelve un array vacío en caso de error\n    }\n  };\n  const getWeekTopSongs = async weekArtistsData => {\n    let artistsSongs = [];\n    try {\n      // Crea un array de promesas para todas las peticiones\n      const promises = weekArtistsData.items.map(artist => {\n        return axios.get(server_url + '/get/artists/topTracks', {\n          params: {\n            id: artist.id,\n            name: artist.name\n          },\n          withCredentials: true\n        });\n      });\n\n      // Espera a que todas las promesas se resuelvan\n      const responses = await Promise.all(promises);\n\n      // Combina los resultados en artistsSongs\n      responses.forEach(response => {\n        artistsSongs = artistsSongs.concat(JSON.parse(response.data.topTracks));\n      });\n      setWeekArtistsSongs(artistsSongs);\n      return artistsSongs; // Devuelve los datos si necesitas usarlos en otro lugar\n    } catch (error) {\n      console.error(\"Error al obtener las canciones principales:\", error);\n      return []; // Devuelve un array vacío en caso de error\n    }\n  };\n  const hasExecuted = useRef(false);\n  const hasRecommended = useRef(false);\n  useEffect(() => {\n    if (yearSongs && monthSongs && weekSongs && yearArtistsSongs && monthArtistsSongs && weekArtistsSongs && userData && !hasExecuted.current) {\n      hasExecuted.current = true;\n      setProcessing(true);\n      console.log(\"Guardando datos en la base de datos\");\n      const songsMap = new Map(); // Clave: song.id, Valor: canción\n\n      // Recolectamos todas las canciones y evitamos duplicados\n      const collectSongs = () => {\n        // Canciones que le gustan al usuario directamente\n        const likedUserSongs = [...yearSongs.items, ...monthSongs.items, ...weekSongs.items].map(song => ({\n          ...song,\n          desdeArtista: false\n        }));\n\n        // Canciones sugeridas por los artistas favoritos\n        const likedArtistSongs = [...yearArtistsSongs.flatMap(artist => artist.tracks), ...monthArtistsSongs.flatMap(artist => artist.tracks), ...weekArtistsSongs.flatMap(artist => artist.tracks)].map(song => ({\n          ...song,\n          desdeArtista: true\n        }));\n        const allSongs = [...likedUserSongs, ...likedArtistSongs];\n        for (const song of allSongs) {\n          const existing = songsMap.get(song.id);\n          if (!existing || existing.desdeArtista === true && song.desdeArtista === false) {\n            songsMap.set(song.id, song);\n          }\n        }\n      };\n      const processAllSongs = async () => {\n        collectSongs();\n        const uniqueSongs = Array.from(songsMap.values());\n        console.log(uniqueSongs);\n        try {\n          const response = await axios.post(`${server_url}/api/process-and-save`, {\n            canciones: uniqueSongs,\n            user: userData\n          });\n          console.log(\"✅ Canciones procesadas y guardadas:\", response.data);\n        } catch (error) {\n          console.error(\"❌ Error al procesar canciones:\", error);\n        }\n      };\n      processAllSongs();\n    }\n  }, [yearSongs, monthSongs, weekSongs, yearArtistsSongs, monthArtistsSongs, weekArtistsSongs, userData]);\n  useEffect(() => {\n    if (!hasRecommended.current && hasExecuted.current && userData) {\n      hasRecommended.current = true;\n      console.log(\"Generando recomendacion\");\n      getRecommendation();\n    }\n  });\n  const getRecommendation = () => {\n    setRecommendedSong(null); /*\n                              axios.get(server_url + \"/api/get/recommendation\", {\n                              params: {\n                              name: userData.display_name\n                              }\n                              }).then((response) => {\n                              console.log(response);\n                              setSongTitle(response.data.title);\n                              axios.get(server_url + '/get/songInfo', {\n                              params: { songName: encodeURIComponent(response.data.title) },\n                              withCredentials: true\n                              }).then((response) => {\n                              const recommended = JSON.parse(response.data.tracks);\n                              setRecommendedSong(recommended.tracks.items[0]);\n                              console.log(recommended);\n                              });\n                              }); */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-dark justify-content-between p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: spotify,\n          alt: \"Logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"navbar-brand h1\",\n          children: \"SpotifAI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !isAuthenticated || userData == null ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: login,\n          className: \"btn btn-outline-light me-2 nav-btn\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userData.images[0].url,\n            alt: \"AvatarUser\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-toggle dropdown-button\",\n            type: \"button\",\n            \"data-bs-toggle\": \"dropdown\",\n            \"aria-expanded\": \"false\",\n            children: userData.display_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/admin\",\n                className: \"dropdown-item\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/songs\",\n                className: \"dropdown-item\",\n                children: \"Canciones\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/artists\",\n                className: \"dropdown-item\",\n                children: \"Artistas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: logout,\n                className: \"dropdown-item\",\n                type: \"button\",\n                children: \"Log Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border spinner-custom\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content d-flex flex-column justify-content-center align-items-center text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-light title\",\n            children: \"\\xBFEst\\xE1s buscando algo nuevo para escuchar?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), !isAuthenticated ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: login,\n            className: \"btn btn-success mt-4\",\n            children: \"Empezar a escuchar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/recommender\",\n            className: \"btn btn-success mt-4\",\n            children: \"Empezar a escuchar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/songs\",\n        element: /*#__PURE__*/_jsxDEV(Songs, {\n          yearSongs: yearSongs,\n          monthSongs: monthSongs,\n          weekSongs: weekSongs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/artists\",\n        element: /*#__PURE__*/_jsxDEV(Artists, {\n          yearArtists: yearArtists,\n          monthArtists: monthArtists,\n          weekArtists: weekArtists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recommender\",\n        element: /*#__PURE__*/_jsxDEV(Recommender, {\n          song: recommendedSong,\n          title: songTitle,\n          userData: userData,\n          updateRecommendation: getRecommendation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BMJgHRfJfAoCUzOQRlE3ojN6Y6U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["spotify","axios","useEffect","useRef","useState","Routes","Route","Link","Songs","Artists","Recommender","Admin","jsxDEV","_jsxDEV","server_url","process","env","REACT_APP_SERVER_URL","App","_s","yearSongs","setYearSongs","monthSongs","setMonthSongs","weekSongs","setWeekSongs","yearArtistsSongs","setYearArtistsSongs","monthArtistsSongs","setMonthArtistsSongs","weekArtistsSongs","setWeekArtistsSongs","yearArtists","setYearArtists","monthArtists","setMonthArtists","weekArtists","setWeekArtists","userData","setUserData","isAuthenticated","setIsAuthenticated","loading","setLoading","processing","setProcessing","recommendedSong","setRecommendedSong","songTitle","setSongTitle","login","get","then","response","spotifyURL","data","window","location","href","withCredentials","authenticated","catch","error","console","getUserData","log","logout","cancelToken","CancelToken","source","requests","params","timeRange","limit","token","JSON","parse","topTracks","topArtists","getYearTopSongs","getMonthTopSongs","getWeekTopSongs","Promise","all","isCancel","yearArtistsData","artistsSongs","promises","items","map","artist","id","name","responses","forEach","concat","monthArtistsData","weekArtistsData","hasExecuted","hasRecommended","current","songsMap","Map","collectSongs","likedUserSongs","song","desdeArtista","likedArtistSongs","flatMap","tracks","allSongs","existing","set","processAllSongs","uniqueSongs","Array","from","values","post","canciones","user","getRecommendation","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","images","url","type","display_name","role","path","element","title","updateRecommendation","_c","$RefreshReg$"],"sources":["D:/Proyectos/Practicas/spotifai/app-web/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport './styles/App.css';\nimport spotify from './assets/spotify.png';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport Songs from './pages/Songs';\nimport Artists from './pages/Artists';\nimport Recommender from './pages/Recommender';\nimport Admin from './pages/Admin';\n\nconst server_url = process.env.REACT_APP_SERVER_URL;\n\nexport default function App() {\n  const [yearSongs, setYearSongs] = useState(null);\n  const [monthSongs, setMonthSongs] = useState(null);\n  const [weekSongs, setWeekSongs] = useState(null);\n  const [yearArtistsSongs, setYearArtistsSongs] = useState(null);\n  const [monthArtistsSongs, setMonthArtistsSongs] = useState(null);\n  const [weekArtistsSongs, setWeekArtistsSongs] = useState(null);\n  const [yearArtists, setYearArtists] = useState(null);\n  const [monthArtists, setMonthArtists] = useState(null);\n  const [weekArtists, setWeekArtists] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [recommendedSong, setRecommendedSong] = useState(false);\n  const [songTitle, setSongTitle] = useState(false)\n\n  const login = () => {\n    axios.get(server_url + '/login')\n      .then((response) => {\n        const spotifyURL = response.data;\n        window.location.href = spotifyURL;\n      });\n  };\n\n  useEffect(() => {\n    axios.get(server_url + '/auth/verify', { withCredentials: true })\n      .then((response) => {\n        setIsAuthenticated(response.data.authenticated);\n      })\n      .catch((error) => {\n        console.error(\"Error de autenticación:\", error);\n        setUserData(null);\n        setIsAuthenticated(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      axios.get(server_url + '/get/user', { withCredentials: true })\n        .then((response) => {\n          setUserData(response.data.userData);\n          getUserData();\n        })\n        .catch((error) => {\n          console.log(\"Error al recibir la información del usuario:\", error);\n        });\n    } else {\n      setUserData(null);\n    }\n  }, [isAuthenticated]);\n\n  const logout = () => {\n    axios.get(server_url + '/logout', { withCredentials: true })\n      .then(() => {\n        setIsAuthenticated(false);\n        setUserData(null);\n      });\n    window.location.href = 'http://localhost:3000/';\n  };\n  const getUserData = () => {\n    setLoading(true);\n\n    const cancelToken = axios.CancelToken.source();\n\n    const requests = [\n      axios.get(server_url + '/get/topTracks', {\n        params: { timeRange: \"long_term\", limit: \"50\" },\n        withCredentials: true,\n        cancelToken: cancelToken.token,\n      }).then((response) => {\n        setYearSongs(JSON.parse(response.data.topTracks));\n      }),\n\n      axios.get(server_url + '/get/topTracks', {\n        params: { timeRange: \"medium_term\", limit: \"50\" },\n        withCredentials: true,\n        cancelToken: cancelToken.token,\n      }).then((response) => {\n        setMonthSongs(JSON.parse(response.data.topTracks));\n      }),\n\n      axios.get(server_url + '/get/topTracks', {\n        params: { timeRange: \"short_term\", limit: \"50\" },\n        withCredentials: true,\n        cancelToken: cancelToken.token,\n      }).then((response) => {\n        setWeekSongs(JSON.parse(response.data.topTracks));\n      }),\n\n      axios.get(server_url + '/get/topArtists', {\n        params: { timeRange: \"long_term\", limit: \"10\" },\n        withCredentials: true,\n        cancelToken: cancelToken.token,\n      }).then((response) => {\n        setYearArtists(JSON.parse(response.data.topArtists));\n        getYearTopSongs(JSON.parse(response.data.topArtists));\n      }),\n\n      axios.get(server_url + '/get/topArtists', {\n        params: { timeRange: \"medium_term\", limit: \"10\" },\n        withCredentials: true,\n        cancelToken: cancelToken.token,\n      }).then((response) => {\n        setMonthArtists(JSON.parse(response.data.topArtists));\n        getMonthTopSongs(JSON.parse(response.data.topArtists));\n      }),\n\n      axios.get(server_url + '/get/topArtists', {\n        params: { timeRange: \"short_term\", limit: \"10\" },\n        withCredentials: true,\n        cancelToken: cancelToken.token,\n      }).then((response) => {\n        setWeekArtists(JSON.parse(response.data.topArtists));\n        getWeekTopSongs(JSON.parse(response.data.topArtists));\n      }),\n    ];\n\n    Promise.all(requests)\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (axios.isCancel(error)) {\n          console.log(\"Solicitud cancelada\");\n        } else {\n          console.error(\"Error al obtener los datos:\", error);\n        }\n      });\n  };\n\n  const getYearTopSongs = async (yearArtistsData) => {\n    let artistsSongs = [];\n  \n    try {\n      // Crea un array de promesas para todas las peticiones\n      const promises = yearArtistsData.items.map(artist => {\n        return axios.get(server_url + '/get/artists/topTracks', {\n          params: { id: artist.id, name: artist.name },\n          withCredentials: true\n        });\n      });\n  \n      // Espera a que todas las promesas se resuelvan\n      const responses = await Promise.all(promises);\n  \n      // Combina los resultados en artistsSongs\n      responses.forEach(response => {\n        artistsSongs = artistsSongs.concat(JSON.parse(response.data.topTracks));\n      });\n  \n      setYearArtistsSongs(artistsSongs);\n      return artistsSongs; // Devuelve los datos si necesitas usarlos en otro lugar\n    } catch (error) {\n      console.error(\"Error al obtener las canciones principales:\", error);\n      return []; // Devuelve un array vacío en caso de error\n    }\n  };\n\n  const getMonthTopSongs = async (monthArtistsData) => {\n    let artistsSongs = [];\n  \n    try {\n      // Crea un array de promesas para todas las peticiones\n      const promises = monthArtistsData.items.map(artist => {\n        return axios.get(server_url + '/get/artists/topTracks', {\n          params: { id: artist.id, name: artist.name },\n          withCredentials: true\n        });\n      });\n  \n      // Espera a que todas las promesas se resuelvan\n      const responses = await Promise.all(promises);\n  \n      // Combina los resultados en artistsSongs\n      responses.forEach(response => {\n        artistsSongs = artistsSongs.concat(JSON.parse(response.data.topTracks));\n      });\n  \n      setMonthArtistsSongs(artistsSongs);\n      return artistsSongs; // Devuelve los datos si necesitas usarlos en otro lugar\n    } catch (error) {\n      console.error(\"Error al obtener las canciones principales:\", error);\n      return []; // Devuelve un array vacío en caso de error\n    }\n  };\n\n  const getWeekTopSongs = async (weekArtistsData) => {\n    let artistsSongs = [];\n  \n    try {\n      // Crea un array de promesas para todas las peticiones\n      const promises = weekArtistsData.items.map(artist => {\n        return axios.get(server_url + '/get/artists/topTracks', {\n          params: { id: artist.id, name: artist.name },\n          withCredentials: true\n        });\n      });\n  \n      // Espera a que todas las promesas se resuelvan\n      const responses = await Promise.all(promises);\n  \n      // Combina los resultados en artistsSongs\n      responses.forEach(response => {\n        artistsSongs = artistsSongs.concat(JSON.parse(response.data.topTracks));\n      });\n  \n      setWeekArtistsSongs(artistsSongs);\n      return artistsSongs; // Devuelve los datos si necesitas usarlos en otro lugar\n    } catch (error) {\n      console.error(\"Error al obtener las canciones principales:\", error);\n      return []; // Devuelve un array vacío en caso de error\n    }\n  };\n\n  const hasExecuted = useRef(false);\n\n  const hasRecommended = useRef(false)\n  useEffect(() => {\n    if (\n      yearSongs && monthSongs && weekSongs &&\n      yearArtistsSongs && monthArtistsSongs && weekArtistsSongs &&\n      userData && !hasExecuted.current\n    ) {\n      hasExecuted.current = true;\n      setProcessing(true);\n      console.log(\"Guardando datos en la base de datos\");\n\n      const songsMap = new Map(); // Clave: song.id, Valor: canción\n\n      // Recolectamos todas las canciones y evitamos duplicados\n      const collectSongs = () => {\n        // Canciones que le gustan al usuario directamente\n        const likedUserSongs = [\n          ...yearSongs.items,\n          ...monthSongs.items,\n          ...weekSongs.items\n        ].map(song => ({\n          ...song,\n          desdeArtista: false\n        }));\n\n        // Canciones sugeridas por los artistas favoritos\n        const likedArtistSongs = [\n          ...yearArtistsSongs.flatMap(artist => artist.tracks),\n          ...monthArtistsSongs.flatMap(artist => artist.tracks),\n          ...weekArtistsSongs.flatMap(artist => artist.tracks)\n        ].map(song => ({\n          ...song,\n          desdeArtista: true\n        }));\n\n        const allSongs = [...likedUserSongs, ...likedArtistSongs];\n\n        for (const song of allSongs) {\n          const existing = songsMap.get(song.id);\n\n          if (!existing || (existing.desdeArtista === true && song.desdeArtista === false)) {\n            songsMap.set(song.id, song);\n          }\n        }\n      };\n\n      const processAllSongs = async () => {\n        collectSongs();\n\n        const uniqueSongs = Array.from(songsMap.values());\n        console.log(uniqueSongs);\n        try {\n          const response = await axios.post(`${server_url}/api/process-and-save`, {\n            canciones: uniqueSongs,\n            user: userData\n          });\n          console.log(\"✅ Canciones procesadas y guardadas:\", response.data);\n        } catch (error) {\n          console.error(\"❌ Error al procesar canciones:\", error);\n        }\n      };\n\n      processAllSongs();\n    }\n  }, [yearSongs, monthSongs, weekSongs, yearArtistsSongs, monthArtistsSongs, weekArtistsSongs, userData]);\n\n\n  useEffect(() => {\n    if (!hasRecommended.current && hasExecuted.current && userData) {\n      hasRecommended.current = true;\n      console.log(\"Generando recomendacion\");\n      getRecommendation();\n    }\n  });\n\n  const getRecommendation = () => {\n    setRecommendedSong(null); /*\n    axios.get(server_url + \"/api/get/recommendation\", {\n      params: {\n        name: userData.display_name\n      }\n    }).then((response) => {\n      console.log(response);\n      setSongTitle(response.data.title);\n      axios.get(server_url + '/get/songInfo', {\n        params: { songName: encodeURIComponent(response.data.title) },\n        withCredentials: true\n      }).then((response) => {\n        const recommended = JSON.parse(response.data.tracks);\n        setRecommendedSong(recommended.tracks.items[0]);\n        console.log(recommended);\n      });\n    }); */\n  }\n\n  return (\n    <div className=\"app-container\">\n      <nav className=\"navbar navbar-dark justify-content-between p-3\">\n        <div className=\"d-flex align-items-center\">\n          <img src={spotify} alt=\"Logo\" className=\"logo\" />\n          <Link to='/' className=\"navbar-brand h1\">SpotifAI</Link>\n        </div>\n        <div>\n          {!isAuthenticated || userData == null ? (\n            <button onClick={login} className=\"btn btn-outline-light me-2 nav-btn\">Log In</button>\n          ) : (\n            <div className=\"dropdown\">\n              <img src={userData.images[0].url} alt='AvatarUser' className='logo'></img>\n              <button className=\"dropdown-toggle dropdown-button\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                {userData.display_name}\n              </button>\n              <ul className=\"dropdown-menu\">\n                <li><Link to=\"/admin\" className=\"dropdown-item\">Admin</Link></li>\n                <li><Link to=\"/songs\" className=\"dropdown-item\">Canciones</Link></li>\n                <li><Link to=\"/artists\" className=\"dropdown-item\">Artistas</Link></li>\n                <li><button onClick={logout} className=\"dropdown-item\" type=\"button\">Log Out</button></li>\n              </ul>\n            </div>\n          )}\n        </div>\n      </nav>\n\n      {loading ? (\n        <div className=\"main-content d-flex justify-content-center align-items-center\">\n          <div className=\"spinner-border spinner-custom\" role=\"status\">\n            <span className=\"sr-only\"></span>\n          </div>\n        </div>\n      ) : (\n        <Routes>\n          <Route path='/' element={\n            <div className=\"main-content d-flex flex-column justify-content-center align-items-center text-center\">\n              <h2 className=\"text-light title\">¿Estás buscando algo nuevo para escuchar?</h2>\n              {!isAuthenticated ? (\n                <button onClick={login} className=\"btn btn-success mt-4\">Empezar a escuchar</button>\n              ) : (\n                <Link to=\"/recommender\" className=\"btn btn-success mt-4\">Empezar a escuchar</Link>\n              )}\n            </div>\n          }></Route>\n          <Route\n            path='/songs'\n            element={<Songs yearSongs={yearSongs} monthSongs={monthSongs} weekSongs={weekSongs} />}\n          />\n          <Route\n            path='/artists'\n            element={<Artists yearArtists={yearArtists} monthArtists={monthArtists} weekArtists={weekArtists} />}\n          />\n          <Route\n            path='/recommender'\n            element={<Recommender song={recommendedSong} title={songTitle} userData={userData} updateRecommendation={getRecommendation} />}\n          />\n          <Route\n            path='/admin'\n            element={ <Admin/>}\n          />\n        </Routes>\n      )}\n\n      <footer>\n        \n      </footer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}