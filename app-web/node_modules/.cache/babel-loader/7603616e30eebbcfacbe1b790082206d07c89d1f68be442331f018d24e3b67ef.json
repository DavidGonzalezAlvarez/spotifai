{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos\\\\Practicas\\\\spotifai\\\\app-web\\\\src\\\\pages\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Admin.css';\nimport trash from \"../assets/trash.svg\";\nimport axios from \"axios\";\nimport rightArrow from \"../assets/rightArrow.svg\";\nimport leftArrow from \"../assets/leftArrow.svg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst server_url = process.env.REACT_APP_SERVER_URL;\nexport default function Admin() {\n  _s();\n  const [activeButton, setActiveButton] = useState(null);\n  const [fetchedSongs, setFetchedSongs] = useState(false);\n  const [fetchedArtists, setFetchedArtists] = useState(false);\n  const [songs, setSongs] = useState([]);\n  const [artists, setArtists] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [pageSongs, setPageSongs] = useState(1);\n  const [pageArtists, setPageArtists] = useState(1);\n  const [pageUsers, setPageUsers] = useState(1);\n  const [totalSongs, setTotalSongs] = useState(0);\n  const [totalArtists, setTotalArtists] = useState(0);\n  const [totalUsers, setTotalUsers] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [paginationDisabled, setPaginationDisabled] = useState(false);\n  const [searchTermSongs, setSearchTermSongs] = useState(\"\");\n  const [searchTermArtists, setSearchTermArtists] = useState(\"\");\n  const [searchTermUsers, setSearchTermUsers] = useState(\"\");\n  const [searchTermGenre, setSearchTermGenre] = useState(\"\");\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [searchTermCountry, setSearchTermCountry] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [country, setCountry] = useState([]);\n  const limit = 10;\n  const formatFollowers = followers => {\n    return new Intl.NumberFormat().format(followers);\n  };\n  const formatDuration = durationMs => {\n    const totalSeconds = Math.round(durationMs / 1000); // Convertir a segundos\n    const minutes = Math.floor(totalSeconds / 60); // Obtener los minutos\n    const seconds = totalSeconds % 60; // Obtener los segundos restantes\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`; // Formato \"minutos:segundos\"\n  };\n  const formatGenres = genres => {\n    if (!genres || genres.length === 0) {\n      return \"Sin géneros\"; // Si no tiene géneros\n    }\n    if (genres.length > 3) {\n      return `${genres.slice(0, 3).join(\", \")}...`; // Si tiene más de 3 géneros, mostrar los 3 primeros y '...'\n    }\n    return genres.join(\", \"); // Si tiene 3 o menos géneros, mostramos todos\n  };\n  const pressed = button => {\n    setActiveButton(prev => prev === button ? null : button);\n  };\n  useEffect(() => {\n    const fetchSpotifyData = async () => {\n      setLoading(true); // Inicia el loading mientras enriquecemos las canciones con datos de Spotify\n\n      const enrichedSongs = await Promise.all(songs.map(async song => {\n        if (!song.spotify) {\n          // Verificamos si la canción ya tiene datos de Spotify\n          try {\n            const response = await axios.get(`${server_url}/get/songInfo?songName=${encodeURIComponent(song.title)}`, {\n              withCredentials: true\n            });\n            const parsed = JSON.parse(response.data.tracks);\n            const track = parsed.tracks.items[0];\n            return {\n              ...song,\n              spotify: track\n            };\n          } catch (err) {\n            return {\n              ...song,\n              spotify: null\n            };\n          }\n        }\n        return song; // Si ya tiene datos de Spotify, la retornamos tal cual\n      }));\n      setLoading(false);\n      setSongs(enrichedSongs);\n      setFetchedSongs(false);\n    };\n    if (activeButton === \"songs\" && fetchedSongs) {\n      fetchSpotifyData();\n    }\n  }, [fetchedSongs]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Empieza la carga de canciones\n\n      if (activeButton === \"songs\") {\n        try {\n          let songsResponse;\n          let totalSongsResponse;\n          if (selectedGenre === \"\") {\n            songsResponse = await axios.get(`${server_url}/api/get/songs?page=${pageSongs}&limit=${limit}`);\n            totalSongsResponse = await axios.get(`${server_url}/api/get/songs/count`);\n          } else {\n            songsResponse = await axios.get(`${server_url}/api/get/songs/${selectedGenre}?page=${pageSongs}&limit=${limit}`);\n            totalSongsResponse = await axios.get(`${server_url}/api/get/songs/count?genre=${selectedGenre}`);\n          }\n          setSongs(songsResponse.data);\n          setTotalSongs(totalSongsResponse.data.total);\n        } catch (error) {\n          console.error('Error fetching songs data:', error);\n        }\n      }\n      setFetchedSongs(true);\n      setLoading(false); // Finaliza la carga de canciones\n    };\n    if (activeButton === \"songs\" && !paginationDisabled) {\n      fetchData();\n    }\n  }, [activeButton, pageSongs, paginationDisabled, selectedGenre]);\n  useEffect(() => {\n    const fetchSpotifyData = async () => {\n      setLoading(true); // Inicia el loading mientras enriquecemos los artistas con datos de Spotify\n      const enrichedArtists = await Promise.all(artists.map(async artist => {\n        if (!artist.spotify) {\n          // Verificamos si el artista ya tiene datos de Spotify\n          try {\n            const response = await axios.get(`${server_url}/get/artistInfo?artistName=${encodeURIComponent(artist.name)}`, {\n              withCredentials: true\n            });\n            const artistData = response.data;\n            return {\n              ...artist,\n              spotify: artistData\n            };\n          } catch (err) {\n            return {\n              ...artist,\n              spotify: null\n            }; // Si hay un error, retornamos el artista sin datos de Spotify\n          }\n        }\n        return artist; // Si ya tiene datos de Spotify, lo retornamos tal cual\n      }));\n      setLoading(false);\n      setArtists(enrichedArtists); // Actualizamos el estado con los artistas enriquecidos\n      setFetchedArtists(false);\n    };\n    if (activeButton === \"artists\" && fetchedArtists) {\n      fetchSpotifyData();\n    }\n  }, [fetchedArtists]); // El efecto se ejecutará cuando 'fetchedArtists' cambie\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Empieza la carga de canciones\n\n      if (activeButton === \"artists\") {\n        try {\n          const artistsResponse = await axios.get(`${server_url}/api/get/artists?page=${pageArtists}&limit=${limit}`);\n          const totalArtistsResponse = await axios.get(`${server_url}/api/get/artists/count`);\n          setArtists(artistsResponse.data);\n          setTotalArtists(totalArtistsResponse.data.total);\n        } catch (error) {\n          console.error('Error fetching artists data:', error);\n        }\n      }\n      setFetchedArtists(true);\n      setLoading(false); // Finaliza la carga de canciones\n    };\n    if (activeButton === \"artists\" && !paginationDisabled) {\n      fetchData();\n    }\n  }, [activeButton, pageArtists, paginationDisabled]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Empieza la carga de canciones\n\n      if (activeButton === \"users\") {\n        try {\n          let usersResponse;\n          let totalUsersResponse;\n          console.log(selectedCountry);\n          if (selectedCountry === \"\") {\n            usersResponse = await axios.get(`${server_url}/api/get/users?page=${pageUsers}&limit=${limit}`);\n            totalUsersResponse = await axios.get(`${server_url}/api/get/users/count`);\n          }\n          usersResponse = await axios.get(`${server_url}/api/get/users/${obtenerCodigoPais(selectedCountry)}?page=${pageUsers}&limit=${limit}`);\n          totalUsersResponse = await axios.get(`${server_url}/api/get/users/count?pais=${obtenerCodigoPais(selectedCountry)}`);\n          setUsers(usersResponse.data);\n          setTotalUsers(totalUsersResponse.data.total);\n        } catch (error) {\n          console.error('Error fetching artists data:', error);\n        }\n      }\n      setLoading(false); // Finaliza la carga de canciones\n    };\n    if (activeButton === \"users\" && !paginationDisabled) {\n      fetchData();\n    }\n  }, [activeButton, pageUsers, paginationDisabled, selectedCountry]);\n  useEffect(() => {\n    axios.get(server_url + \"/api/get/genres\").then(res => {\n      setGenres(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(server_url + \"/api/get/paises\").then(res => {\n      const paisesTraducidos = res.data.map(codigo => traducirCodigoPais(codigo));\n      setCountry(paisesTraducidos);\n    });\n  }, []);\n  const searchArtists = async query => {\n    try {\n      const response = await axios.get(`/api/search/artists`, {\n        params: {\n          q: query\n        }\n      });\n      setArtists(response.data);\n      setFetchedArtists(true);\n    } catch (error) {\n      console.error('Error al buscar artistas:', error);\n      return [];\n    }\n  };\n  const searchSongs = async query => {\n    try {\n      const response = await axios.get(server_url + `/api/search/songs`, {\n        params: {\n          q: query\n        }\n      });\n      setSongs(response.data);\n      setFetchedSongs(true);\n    } catch (error) {\n      console.error('Error al buscar canciones:', error);\n      return [];\n    }\n  };\n  const searchSongsGenre = async query => {};\n  const searchUsers = async query => {\n    try {\n      const response = await axios.get(server_url + `/api/search/users`, {\n        params: {\n          q: query\n        }\n      });\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error al buscar canciones:', error);\n      return [];\n    }\n  };\n  const handleSearchArtists = () => {\n    if (searchTermArtists === \"\") {\n      setPaginationDisabled(false);\n    } else {\n      searchArtists(searchTermArtists);\n      setPaginationDisabled(true);\n    }\n  };\n  const handleSearchSongs = () => {\n    if (searchTermSongs === \"\") {\n      setPaginationDisabled(false);\n    } else {\n      searchSongs(searchTermSongs);\n      setPaginationDisabled(true);\n    }\n  };\n  const handleSearchSongsGenre = () => {\n    setSelectedGenre(searchTermGenre);\n  };\n  const handleSearchUsers = () => {\n    if (searchTermUsers === \"\") {\n      setPaginationDisabled(false);\n    } else {\n      searchUsers(searchTermUsers);\n      setPaginationDisabled(true);\n    }\n  };\n  const handleSearchUsersContry = () => {\n    setSelectedCountry(searchTermCountry);\n  };\n  const handleDeleteSong = async id => {\n    if (!window.confirm(\"¿Estás seguro de que quieres eliminar esta canción?\")) return;\n    try {\n      await axios.delete(server_url + `/api/delete/song/${id}`);\n      setSongs(prev => prev.filter(song => song.id !== id));\n    } catch (err) {\n      console.error(\"Error al eliminar canción:\", err);\n      alert(\"Error al eliminar la canción.\");\n    }\n  };\n  const handleDeleteAdmin = async id => {\n    if (!window.confirm(\"¿Estás seguro de que quieres eliminar este artista?\")) return;\n    try {\n      await axios.delete(server_url + `/api/delete/artists/${id}`);\n      setArtists(prev => prev.filter(artist => artist.id !== id));\n    } catch (err) {\n      console.error(\"Error al eliminar el artista:\", err);\n      alert(\"Error al eliminar la artista.\");\n    }\n  };\n  const handleDeleteUser = async id => {\n    if (!window.confirm(\"¿Estás seguro de que quieres eliminar este usuario?\")) return;\n    try {\n      await axios.delete(server_url + `/api/delete/users/${id}`);\n      setUsers(prev => prev.filter(user => user.id !== id));\n    } catch (err) {\n      console.error(\"Error al eliminar el Usuario:\", err);\n      alert(\"Error al eliminar la artista.\");\n    }\n  };\n  function traducirCodigoPais(codigoIso) {\n    const regionNames = new Intl.DisplayNames(['es'], {\n      type: 'region'\n    });\n    return regionNames.of(codigoIso.toUpperCase());\n  }\n  function obtenerCodigoPais(nombrePais) {\n    const regionNames = new Intl.DisplayNames(['es'], {\n      type: 'region'\n    });\n    const codigos = [];\n    for (let i = 65; i <= 90; i++) {\n      for (let j = 65; j <= 90; j++) {\n        const codigo = String.fromCharCode(i) + String.fromCharCode(j);\n        const nombre = regionNames.of(codigo);\n        if (nombre) {\n          codigos.push({\n            codigo,\n            nombre\n          });\n        }\n      }\n    }\n    const normalizar = str => str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n    const nombreNormalizado = normalizar(nombrePais);\n    const resultado = codigos.find(p => normalizar(p.nombre) === nombreNormalizado);\n    return resultado ? resultado.codigo : null;\n  }\n  const renderPagination = (currentPage, total, onPageChange) => {\n    const totalPages = Math.ceil(total / limit);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination-button\",\n        disabled: currentPage === 1 || paginationDisabled,\n        onClick: () => onPageChange(currentPage - 1),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: leftArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 144\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pagination-text\",\n        children: [\"P\\xE1gina \", currentPage, \" de \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination-button\",\n        disabled: currentPage === totalPages || paginationDisabled,\n        onClick: () => onPageChange(currentPage + 1),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: rightArrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 153\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"users\"),\n        className: `sidebar-btn ${activeButton === \"users\" ? \"pressed\" : \"\"}`,\n        children: \"Usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"songs\"),\n        className: `sidebar-btn ${activeButton === \"songs\" ? \"pressed\" : \"\"}`,\n        children: \"Canciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"artists\"),\n        className: `sidebar-btn ${activeButton === \"artists\" ? \"pressed\" : \"\"}`,\n        children: \"Artistas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pressed(\"graphs\"),\n        className: `sidebar-btn ${activeButton === \"graphs\" ? \"pressed\" : \"\"}`,\n        children: \"Gr\\xE1ficos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"admin-header\",\n        children: \"Panel de admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), activeButton === \"users\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Buscar usuarios...\",\n            className: \"admin-input\",\n            value: searchTermUsers,\n            onChange: e => setSearchTermUsers(e.target.value),\n            onKeyDown: e => {\n              if (e.key === \"Enter\") {\n                handleSearchUsers();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"country-options\",\n            placeholder: \"Filtrar por pais...\",\n            className: \"admin-input\",\n            value: searchTermCountry,\n            onChange: e => setSearchTermCountry(e.target.value),\n            onKeyDown: e => {\n              if (e.key === \"Enter\") {\n                handleSearchUsersContry();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"country-options\",\n          children: country.map((contry, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: contry\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-custom\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 15\n        }, this) : users.map((user, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.imagen,\n            alt: \"Cover\",\n            className: \"row-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"row-name\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"row-info\",\n            children: [\"Pais: \", traducirCodigoPais(user.pais)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"row-info\",\n            children: [\"Id: \", user.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteUser(user.id),\n            className: \"row-trash\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: trash,\n              alt: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 21\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 19\n        }, this)), renderPagination(pageUsers, totalUsers, setPageUsers)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), activeButton === \"songs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Buscar canciones...\",\n            className: \"admin-input\",\n            value: searchTermSongs,\n            onChange: e => setSearchTermSongs(e.target.value),\n            onKeyDown: e => {\n              if (e.key === \"Enter\") {\n                handleSearchSongs();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"genre-options\",\n            placeholder: \"Filtrar por g\\xE9nero...\",\n            className: \"admin-input\",\n            value: searchTermGenre,\n            onChange: e => setSearchTermGenre(e.target.value),\n            onKeyDown: e => {\n              if (e.key === \"Enter\") {\n                handleSearchSongsGenre();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"genre-options\",\n          children: genres.map((genre, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-custom\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this) : songs.map((song, i) => {\n          var _song$spotify$album$i;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-row\",\n            children: song.spotify ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_song$spotify$album$i = song.spotify.album.images[0]) === null || _song$spotify$album$i === void 0 ? void 0 : _song$spotify$album$i.url,\n                alt: \"Cover\",\n                className: \"row-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"row-name\",\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"\\xC1lbum: \", song.spotify.album.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"Duraci\\xF3n: \", formatDuration(song.spotify.duration_ms)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteSong(song.spotify.id),\n                className: \"row-trash\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: trash,\n                  alt: \"Eliminar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"row-name\",\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 19\n            }, this) // Solo muestra el nombre si no hay información de Spotify\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this);\n        }), renderPagination(pageSongs, totalSongs, setPageSongs)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), activeButton === \"artists\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Buscar artistas...\",\n          className: \"admin-input\",\n          value: searchTermArtists,\n          onChange: e => setSearchTermArtists(e.target.value),\n          onKeyDown: e => {\n            if (e.key === \"Enter\") {\n              handleSearchArtists();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 17\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-custom\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 17\n        }, this) : artists.map((artist, i) => {\n          var _artist$spotify$image;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-row\",\n            children: artist.spotify ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: ((_artist$spotify$image = artist.spotify.images[0]) === null || _artist$spotify$image === void 0 ? void 0 : _artist$spotify$image.url) || 'https://via.placeholder.com/50',\n                alt: artist.name,\n                className: \"row-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"row-name\",\n                children: artist.spotify.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"G\\xE9neros: \", formatGenres(artist.spotify.genres)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"row-info\",\n                children: [\"Seguidores: \", formatFollowers(artist.spotify.followers)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  handleDeleteAdmin(artist.id);\n                },\n                className: \"row-trash\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: trash,\n                  alt: \"Eliminar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"row-name\",\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 25\n            }, this) // Solo muestra el nombre si no hay información de Spotify\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 21\n          }, this);\n        }), renderPagination(pageArtists, totalArtists, setPageArtists)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 13\n      }, this), activeButton === \"graphs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-text\",\n          children: \"Mostrando gr\\xE1ficos...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }, this), !activeButton && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-table\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-text\",\n          children: \"Selecciona una opci\\xF3n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"Hsea/Ca7zy3DuSZLUQEO7zvXhwM=\");\n_c = Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","trash","axios","rightArrow","leftArrow","jsxDEV","_jsxDEV","Fragment","_Fragment","server_url","process","env","REACT_APP_SERVER_URL","Admin","_s","activeButton","setActiveButton","fetchedSongs","setFetchedSongs","fetchedArtists","setFetchedArtists","songs","setSongs","artists","setArtists","users","setUsers","pageSongs","setPageSongs","pageArtists","setPageArtists","pageUsers","setPageUsers","totalSongs","setTotalSongs","totalArtists","setTotalArtists","totalUsers","setTotalUsers","loading","setLoading","paginationDisabled","setPaginationDisabled","searchTermSongs","setSearchTermSongs","searchTermArtists","setSearchTermArtists","searchTermUsers","setSearchTermUsers","searchTermGenre","setSearchTermGenre","selectedGenre","setSelectedGenre","genres","setGenres","searchTermCountry","setSearchTermCountry","selectedCountry","setSelectedCountry","country","setCountry","limit","formatFollowers","followers","Intl","NumberFormat","format","formatDuration","durationMs","totalSeconds","Math","round","minutes","floor","seconds","toString","padStart","formatGenres","length","slice","join","pressed","button","prev","fetchSpotifyData","enrichedSongs","Promise","all","map","song","spotify","response","get","encodeURIComponent","title","withCredentials","parsed","JSON","parse","data","tracks","track","items","err","fetchData","songsResponse","totalSongsResponse","total","error","console","enrichedArtists","artist","name","artistData","artistsResponse","totalArtistsResponse","usersResponse","totalUsersResponse","log","obtenerCodigoPais","then","res","paisesTraducidos","codigo","traducirCodigoPais","searchArtists","query","params","q","searchSongs","searchSongsGenre","searchUsers","handleSearchArtists","handleSearchSongs","handleSearchSongsGenre","handleSearchUsers","handleSearchUsersContry","handleDeleteSong","id","window","confirm","delete","filter","alert","handleDeleteAdmin","handleDeleteUser","user","codigoIso","regionNames","DisplayNames","type","of","toUpperCase","nombrePais","codigos","i","j","String","fromCharCode","nombre","push","normalizar","str","normalize","replace","toLowerCase","nombreNormalizado","resultado","find","p","renderPagination","currentPage","onPageChange","totalPages","ceil","className","children","disabled","onClick","src","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onKeyDown","key","list","contry","role","imagen","alt","pais","genre","_song$spotify$album$i","album","images","url","duration_ms","_artist$spotify$image","_c","$RefreshReg$"],"sources":["D:/Proyectos/Practicas/spotifai/app-web/src/pages/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Admin.css';\r\nimport trash from \"../assets/trash.svg\";\r\nimport axios from \"axios\";\r\nimport rightArrow from \"../assets/rightArrow.svg\"\r\nimport leftArrow from \"../assets/leftArrow.svg\"\r\n\r\nconst server_url = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport default function Admin() {\r\n  const [activeButton, setActiveButton] = useState(null);\r\n  const [fetchedSongs, setFetchedSongs] = useState(false);\r\n  const [fetchedArtists, setFetchedArtists] = useState(false);\r\n  const [songs, setSongs] = useState([]);\r\n  const [artists, setArtists] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [pageSongs, setPageSongs] = useState(1);\r\n  const [pageArtists, setPageArtists] = useState(1);\r\n  const [pageUsers, setPageUsers] = useState(1);\r\n  const [totalSongs, setTotalSongs] = useState(0);\r\n  const [totalArtists, setTotalArtists] = useState(0);\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [paginationDisabled, setPaginationDisabled] = useState(false);\r\n  const [searchTermSongs, setSearchTermSongs] = useState(\"\");\r\n  const [searchTermArtists, setSearchTermArtists] = useState(\"\");\r\n  const [searchTermUsers, setSearchTermUsers] = useState(\"\");\r\n  const [searchTermGenre, setSearchTermGenre] = useState(\"\");\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [genres, setGenres] = useState([]);\r\n  const [searchTermCountry, setSearchTermCountry] = useState(\"\");\r\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n  const [country, setCountry] = useState([]);\r\n  const limit = 10;\r\n\r\n    const formatFollowers = (followers) => {\r\n        return new Intl.NumberFormat().format(followers);\r\n    };\r\n\r\n    const formatDuration = (durationMs) => {\r\n        const totalSeconds = Math.round(durationMs / 1000); // Convertir a segundos\r\n        const minutes = Math.floor(totalSeconds / 60); // Obtener los minutos\r\n        const seconds = totalSeconds % 60; // Obtener los segundos restantes\r\n        return `${minutes}:${seconds.toString().padStart(2, '0')}`; // Formato \"minutos:segundos\"\r\n    };\r\n\r\n    const formatGenres = (genres) => {\r\n    if (!genres || genres.length === 0) {\r\n        return \"Sin géneros\"; // Si no tiene géneros\r\n    }\r\n    \r\n    if (genres.length > 3) {\r\n        return `${genres.slice(0, 3).join(\", \")}...`; // Si tiene más de 3 géneros, mostrar los 3 primeros y '...'\r\n    }\r\n\r\n    return genres.join(\", \"); // Si tiene 3 o menos géneros, mostramos todos\r\n};\r\n\r\n  const pressed = (button) => {\r\n    setActiveButton(prev => (prev === button ? null : button));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSpotifyData = async () => {\r\n      setLoading(true); // Inicia el loading mientras enriquecemos las canciones con datos de Spotify\r\n\r\n      const enrichedSongs = await Promise.all(songs.map(async (song) => {\r\n        if (!song.spotify) { // Verificamos si la canción ya tiene datos de Spotify\r\n          try {\r\n            const response = await axios.get(`${server_url}/get/songInfo?songName=${encodeURIComponent(song.title)}`, {\r\n              withCredentials: true\r\n            });\r\n            const parsed = JSON.parse(response.data.tracks);\r\n            const track = parsed.tracks.items[0];\r\n            return { ...song, spotify: track };\r\n          } catch (err) {\r\n            return { ...song, spotify: null };\r\n          }\r\n        }\r\n        return song; // Si ya tiene datos de Spotify, la retornamos tal cual\r\n      }));\r\n        setLoading(false); \r\n        setSongs(enrichedSongs);\r\n        setFetchedSongs(false)\r\n    };\r\n\r\n    if (activeButton === \"songs\" && fetchedSongs) {\r\n        fetchSpotifyData();\r\n    }\r\n  }, [fetchedSongs]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true); // Empieza la carga de canciones\r\n\r\n      if (activeButton === \"songs\") {\r\n        try {\r\n          let songsResponse\r\n          let totalSongsResponse\r\n          if (selectedGenre === \"\") {\r\n            songsResponse = await axios.get(`${server_url}/api/get/songs?page=${pageSongs}&limit=${limit}`);\r\n            totalSongsResponse = await axios.get(`${server_url}/api/get/songs/count`);\r\n          } else {\r\n            songsResponse = await axios.get(`${server_url}/api/get/songs/${selectedGenre}?page=${pageSongs}&limit=${limit}`);\r\n            totalSongsResponse = await axios.get(`${server_url}/api/get/songs/count?genre=${selectedGenre}`);\r\n          }\r\n          setSongs(songsResponse.data);\r\n          setTotalSongs(totalSongsResponse.data.total);\r\n        } catch (error) {\r\n          console.error('Error fetching songs data:', error);\r\n        }\r\n      }\r\n        setFetchedSongs(true);\r\n        setLoading(false); // Finaliza la carga de canciones\r\n    };\r\n\r\n    if (activeButton === \"songs\" && !paginationDisabled) {\r\n      fetchData();\r\n    }\r\n  }, [activeButton, pageSongs, paginationDisabled, selectedGenre]);\r\n\r\n  useEffect(() => {\r\n    const fetchSpotifyData = async () => {\r\n        setLoading(true); // Inicia el loading mientras enriquecemos los artistas con datos de Spotify\r\n        const enrichedArtists = await Promise.all(artists.map(async (artist) => {\r\n        if (!artist.spotify) { // Verificamos si el artista ya tiene datos de Spotify\r\n            try {\r\n            const response = await axios.get(`${server_url}/get/artistInfo?artistName=${encodeURIComponent(artist.name)}`, {\r\n                withCredentials: true\r\n            });\r\n            const artistData = response.data;\r\n            return { ...artist, spotify: artistData };\r\n            } catch (err) {\r\n            return { ...artist, spotify: null }; // Si hay un error, retornamos el artista sin datos de Spotify\r\n            }\r\n        }\r\n        return artist; // Si ya tiene datos de Spotify, lo retornamos tal cual\r\n        }));\r\n\r\n        setLoading(false);\r\n        setArtists(enrichedArtists); // Actualizamos el estado con los artistas enriquecidos\r\n        setFetchedArtists(false);\r\n    };\r\n\r\n    if (activeButton === \"artists\" && fetchedArtists) {\r\n        fetchSpotifyData();\r\n    }\r\n    }, [fetchedArtists]); // El efecto se ejecutará cuando 'fetchedArtists' cambie\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true); // Empieza la carga de canciones\r\n\r\n      if (activeButton === \"artists\") {\r\n        try {\r\n          const artistsResponse = await axios.get(`${server_url}/api/get/artists?page=${pageArtists}&limit=${limit}`);\r\n          const totalArtistsResponse = await axios.get(`${server_url}/api/get/artists/count`);\r\n          setArtists(artistsResponse.data);\r\n          setTotalArtists(totalArtistsResponse.data.total);\r\n        } catch (error) {\r\n          console.error('Error fetching artists data:', error);\r\n        }\r\n      }\r\n\r\n        setFetchedArtists(true);\r\n        setLoading(false); // Finaliza la carga de canciones\r\n    };\r\n\r\n    if (activeButton === \"artists\" && !paginationDisabled) {\r\n      fetchData();\r\n    }\r\n  }, [activeButton, pageArtists, paginationDisabled]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true); // Empieza la carga de canciones\r\n\r\n      if (activeButton === \"users\") {\r\n        try {\r\n          let usersResponse;\r\n          let totalUsersResponse;\r\n          console.log(selectedCountry);\r\n          if (selectedCountry === \"\") {\r\n            usersResponse = await axios.get(`${server_url}/api/get/users?page=${pageUsers}&limit=${limit}`);\r\n            totalUsersResponse = await axios.get(`${server_url}/api/get/users/count`);\r\n          }\r\n            usersResponse = await axios.get(`${server_url}/api/get/users/${obtenerCodigoPais(selectedCountry)}?page=${pageUsers}&limit=${limit}`);\r\n            totalUsersResponse = await axios.get(`${server_url}/api/get/users/count?pais=${obtenerCodigoPais(selectedCountry)}`);\r\n          setUsers(usersResponse.data);\r\n          setTotalUsers(totalUsersResponse.data.total);\r\n        } catch (error) {\r\n          console.error('Error fetching artists data:', error);\r\n        }\r\n      }\r\n\r\n        setLoading(false); // Finaliza la carga de canciones\r\n    };\r\n\r\n    if (activeButton === \"users\" && !paginationDisabled) {\r\n      fetchData();\r\n    }\r\n  }, [activeButton, pageUsers, paginationDisabled, selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    axios.get(server_url+\"/api/get/genres\").then(res => {\r\n      setGenres(res.data)\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(server_url+\"/api/get/paises\").then(res => {\r\n      const paisesTraducidos = res.data.map(codigo => traducirCodigoPais(codigo));\r\n      setCountry(paisesTraducidos);\r\n    });\r\n  }, []);\r\n\r\n  const searchArtists = async (query) => {\r\n        try {\r\n            const response = await axios.get(`/api/search/artists`, {\r\n            params: { q: query },\r\n            });\r\n            setArtists(response.data)\r\n            setFetchedArtists(true)\r\n        } catch (error) {\r\n            console.error('Error al buscar artistas:', error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    const searchSongs = async (query) => {\r\n        try {\r\n            const response = await axios.get(server_url+`/api/search/songs`, {\r\n            params: { q: query },\r\n            });\r\n            setSongs(response.data)\r\n            setFetchedSongs(true)\r\n        } catch (error) {\r\n            console.error('Error al buscar canciones:', error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    const searchSongsGenre = async (query) => {\r\n\r\n    }\r\n\r\n    const searchUsers = async (query) => {\r\n        try {\r\n            const response = await axios.get(server_url+`/api/search/users`, {\r\n            params: { q: query },\r\n            });\r\n            setUsers(response.data)\r\n        } catch (error) {\r\n            console.error('Error al buscar canciones:', error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    const handleSearchArtists = () => {\r\n        if (searchTermArtists === \"\"){\r\n            setPaginationDisabled(false)\r\n        } else {\r\n            searchArtists(searchTermArtists)\r\n            setPaginationDisabled(true)\r\n        }\r\n    }\r\n\r\n    const handleSearchSongs = () => {\r\n        if (searchTermSongs === \"\"){\r\n            setPaginationDisabled(false)\r\n        } else {\r\n            searchSongs(searchTermSongs)\r\n            setPaginationDisabled(true)\r\n        }\r\n    }\r\n\r\n    const handleSearchSongsGenre = () => {\r\n      setSelectedGenre(searchTermGenre)\r\n    }\r\n\r\n    const handleSearchUsers = () => {\r\n        if (searchTermUsers === \"\"){\r\n            setPaginationDisabled(false)\r\n        } else {\r\n            searchUsers(searchTermUsers)\r\n            setPaginationDisabled(true)\r\n        }\r\n    }\r\n\r\n    const handleSearchUsersContry = () => {\r\n      setSelectedCountry(searchTermCountry)\r\n    }\r\n\r\n    const handleDeleteSong = async (id) => {\r\n      if (!window.confirm(\"¿Estás seguro de que quieres eliminar esta canción?\")) return;\r\n      try {\r\n        await axios.delete(server_url+`/api/delete/song/${id}`);\r\n        setSongs((prev) => prev.filter((song) => song.id !== id));\r\n      } catch (err) {\r\n        console.error(\"Error al eliminar canción:\", err);\r\n        alert(\"Error al eliminar la canción.\");\r\n      }\r\n  };\r\n\r\n  const handleDeleteAdmin = async (id) => {\r\n    if (!window.confirm(\"¿Estás seguro de que quieres eliminar este artista?\")) return;\r\n      try {\r\n        await axios.delete(server_url+`/api/delete/artists/${id}`);\r\n        setArtists((prev) => prev.filter((artist) => artist.id !== id));\r\n      } catch (err) {\r\n        console.error(\"Error al eliminar el artista:\", err);\r\n        alert(\"Error al eliminar la artista.\");\r\n      }\r\n  };\r\n\r\n  const handleDeleteUser = async (id) => {\r\n    if (!window.confirm(\"¿Estás seguro de que quieres eliminar este usuario?\")) return;\r\n      try {\r\n        await axios.delete(server_url+`/api/delete/users/${id}`);\r\n        setUsers((prev) => prev.filter((user) => user.id !== id));\r\n      } catch (err) {\r\n        console.error(\"Error al eliminar el Usuario:\", err);\r\n        alert(\"Error al eliminar la artista.\");\r\n      }\r\n  };\r\n\r\n  function traducirCodigoPais(codigoIso) {\r\n    const regionNames = new Intl.DisplayNames(['es'], { type: 'region' });\r\n    return regionNames.of(codigoIso.toUpperCase());\r\n  }\r\n\r\n  function obtenerCodigoPais(nombrePais) {\r\n    const regionNames = new Intl.DisplayNames(['es'], { type: 'region' });\r\n    const codigos = [];\r\n    for (let i = 65; i <= 90; i++) {\r\n      for (let j = 65; j <= 90; j++) {\r\n        const codigo = String.fromCharCode(i) + String.fromCharCode(j);\r\n        const nombre = regionNames.of(codigo);\r\n        if (nombre) {\r\n          codigos.push({ codigo, nombre });\r\n        }\r\n      }\r\n    }\r\n    const normalizar = str => str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\r\n    const nombreNormalizado = normalizar(nombrePais);\r\n\r\n    const resultado = codigos.find(p => normalizar(p.nombre) === nombreNormalizado);\r\n    return resultado ? resultado.codigo : null;\r\n  }\r\n\r\n  const renderPagination = (currentPage, total, onPageChange) => {\r\n    const totalPages = Math.ceil(total / limit);\r\n    return (\r\n      <div className=\"pagination\">\r\n        <button className='pagination-button' disabled={currentPage === 1 || paginationDisabled} onClick={() => onPageChange(currentPage - 1)}><img src={leftArrow}></img></button>\r\n        <span className='pagination-text'>Página {currentPage} de {totalPages}</span>\r\n        <button className='pagination-button' disabled={currentPage === totalPages || paginationDisabled} onClick={() => onPageChange(currentPage + 1)}><img src={rightArrow}></img></button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <aside className=\"sidebar\">\r\n        <button\r\n          onClick={() => pressed(\"users\")}\r\n          className={`sidebar-btn ${activeButton === \"users\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Usuarios\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"songs\")}\r\n          className={`sidebar-btn ${activeButton === \"songs\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Canciones\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"artists\")}\r\n          className={`sidebar-btn ${activeButton === \"artists\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Artistas\r\n        </button>\r\n        <button\r\n          onClick={() => pressed(\"graphs\")}\r\n          className={`sidebar-btn ${activeButton === \"graphs\" ? \"pressed\" : \"\"}`}\r\n        >\r\n          Gráficos\r\n        </button>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <h2 className=\"admin-header\">Panel de admin</h2>\r\n\r\n        {activeButton === \"users\" && (\r\n          <div className=\"admin-table\">\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Buscar usuarios...\"\r\n                className=\"admin-input\"\r\n                value={searchTermUsers}\r\n                onChange={(e) => setSearchTermUsers(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\"){\r\n                        handleSearchUsers()\r\n                    }\r\n                }}\r\n              />\r\n            <input\r\n              list=\"country-options\"\r\n              placeholder=\"Filtrar por pais...\"\r\n              className=\"admin-input\"\r\n              value={searchTermCountry}\r\n              onChange={(e) => setSearchTermCountry(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  handleSearchUsersContry();\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <datalist id=\"country-options\">\r\n            {country.map((contry, i) => (\r\n              <option key={i} value={contry} />\r\n            ))}\r\n          </datalist>\r\n            {loading ? (\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <div className=\"spinner-border spinner-custom\" role=\"status\">\r\n                <span className=\"sr-only\"></span>\r\n                </div>\r\n              </div>\r\n              ) : (\r\n                users.map((user, i) => (\r\n                  <div className=\"admin-row\" key={i}>\r\n                    <img src={user.imagen} alt=\"Cover\" className='row-img'/>\r\n                    <h3 className=\"row-name\">{user.name}</h3>\r\n                    <p className=\"row-info\">Pais: {traducirCodigoPais(user.pais)}</p>\r\n                    <p className=\"row-info\">Id: {user.id}</p>\r\n                    <button onClick={() => handleDeleteUser(user.id)} className=\"row-trash\">\r\n                      <img src={trash} alt=\"Eliminar\" />\r\n                    </button>\r\n                  </div>\r\n                ))\r\n              )}\r\n            {renderPagination(pageUsers, totalUsers, setPageUsers)}\r\n          </div>\r\n        )}\r\n\r\n        {activeButton === \"songs\" && (\r\n        <div className=\"admin-table\">\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Buscar canciones...\"\r\n              className=\"admin-input\"\r\n              value={searchTermSongs}\r\n              onChange={(e) => setSearchTermSongs(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  handleSearchSongs();\r\n                }\r\n              }}\r\n            />\r\n            <input\r\n              list=\"genre-options\"\r\n              placeholder=\"Filtrar por género...\"\r\n              className=\"admin-input\"\r\n              value={searchTermGenre}\r\n              onChange={(e) => setSearchTermGenre(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  handleSearchSongsGenre();\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <datalist id=\"genre-options\">\r\n            {genres.map((genre, i) => (\r\n              <option key={i} value={genre} />\r\n            ))}\r\n          </datalist>\r\n          {loading ? (\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div className=\"spinner-border spinner-custom\" role=\"status\">\r\n                <span className=\"sr-only\"></span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            songs.map((song, i) => (\r\n              <div className=\"admin-row\" key={i}>\r\n                {song.spotify ? (\r\n                  <>\r\n                    <img\r\n                      src={song.spotify.album.images[0]?.url}\r\n                      alt=\"Cover\"\r\n                      className=\"row-img\"\r\n                    />\r\n                    <h3 className=\"row-name\">{song.title}</h3>\r\n                    <p className=\"row-info\">Álbum: {song.spotify.album.name}</p>\r\n                    <p className=\"row-info\">Duración: {formatDuration(song.spotify.duration_ms)}</p>\r\n                    <button\r\n                      onClick={() => handleDeleteSong(song.spotify.id)}\r\n                      className=\"row-trash\"\r\n                    >\r\n                      <img src={trash} alt=\"Eliminar\" />\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <h3 className=\"row-name\">{song.title}</h3> // Solo muestra el nombre si no hay información de Spotify\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n          {renderPagination(pageSongs, totalSongs, setPageSongs)}\r\n        </div>\r\n      )}\r\n\r\n        {activeButton === \"artists\" && (\r\n            <div className=\"admin-table\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar artistas...\"\r\n                    className=\"admin-input\"\r\n                    value={searchTermArtists}\r\n                    onChange={(e) => setSearchTermArtists(e.target.value)}\r\n                    onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\"){\r\n                            handleSearchArtists()\r\n                        }\r\n                    }}\r\n                />\r\n                {loading ? (\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <div className=\"spinner-border spinner-custom\" role=\"status\">\r\n                    <span className=\"sr-only\"></span>\r\n                    </div>\r\n                </div>\r\n                ) : (\r\n                artists.map((artist, i) => (\r\n                    <div className=\"admin-row\" key={i}>\r\n                    {artist.spotify ? (\r\n                        <>\r\n                        <img\r\n                            src={artist.spotify.images[0]?.url || 'https://via.placeholder.com/50'}\r\n                            alt={artist.name}\r\n                            className='row-img'\r\n                        />\r\n                        <h3 className=\"row-name\">{artist.spotify.name}</h3>\r\n                        <p className=\"row-info\">Géneros: {formatGenres(artist.spotify.genres)}</p>\r\n                        <p className=\"row-info\">Seguidores: {formatFollowers(artist.spotify.followers)}</p>\r\n                        <button onClick={() => {handleDeleteAdmin(artist.id)}} className=\"row-trash\">\r\n                            <img src={trash} alt=\"Eliminar\" />\r\n                        </button>\r\n                        </>\r\n                    ) : (\r\n                        <h3 className=\"row-name\">{artist.name}</h3> // Solo muestra el nombre si no hay información de Spotify\r\n                    )}\r\n                    </div>\r\n                ))\r\n                )}\r\n                {renderPagination(pageArtists, totalArtists, setPageArtists)}\r\n            </div>\r\n            )}\r\n\r\n        {activeButton === \"graphs\" && (\r\n          <div className=\"admin-table\">\r\n            <p className='admin-text'>Mostrando gráficos...</p>\r\n          </div>\r\n        )}\r\n\r\n        {!activeButton && (\r\n          <div className=\"admin-table\">\r\n            <p className='admin-text'>Selecciona una opción...</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}